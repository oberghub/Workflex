{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { db } from \"../../database/firebase\";\nimport { useSelector } from 'react-redux';\nimport { collection, onSnapshot } from 'firebase/firestore';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function MealScreen(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    refreshing = _useState2[0],\n    setRefreshing = _useState2[1];\n  var user = useSelector(function (state) {\n    return state.user_data.user;\n  });\n\n  var _useState3 = useState([{\n      foodTitle: 'Beef Burger',\n      desc: 'หร่อยจัดหร่อยจัดหร่อยจัดหร่อยจัดหร่อยจัดหร่อยจัดหร่อยจัดหร่อยจัดหร่อยจัดหร่อยจัดหร่อยจัดหร่อยจัดหร่อยจัดหร่อยจัด',\n      image: 'https://cdn.britannica.com/31/122031-050-F8FCA663/Hamburger-cheeseburger.jpg',\n      ingradient: [{\n        ingradientName: \"Ground Beef\",\n        weight: 100,\n        calories: 250.5\n      },\n      {\n        ingradientName: \"Bread\",\n        weight: 40,\n        calories: 105.64\n      }, {\n        ingradientName: \"Cheese\",\n        weight: 21,\n        calories: 70\n      }]\n    }]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    foodData = _useState4[0],\n    setFoodData = _useState4[1];\n  useEffect(function () {\n    onSnapshot(collection(db, 'foodData'), function (snapshot) {\n      setFoodData(snapshot.docs.map(function (doc) {\n        return doc.data();\n      }));\n    });\n  }, []);\n  var findCalories = function findCalories(data) {\n    if (!!data) {\n      return data.map(function (data) {\n        return data.calories * (data.weight / 100);\n      }).reduce(function (a, b) {\n        return a + b;\n      }).toFixed(2);\n    } else {\n      return \"\";\n    }\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(View, {\n      style: [styles.shadowbox, {\n        width: \"100%\",\n        padding: 10\n      }],\n      children: _jsx(FlatList, {\n        data: foodData,\n        refreshControl: _jsx(RefreshControl, {\n          refreshing: refreshing,\n          onRefresh: function onRefresh() {\n            pullMe();\n          }\n        }),\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item,\n            index = _ref2.index;\n          return _jsx(TouchableOpacity, {\n            style: {\n              width: \"100%\",\n              height: 'auto',\n              backgroundColor: 'white',\n              shadowColor: '#171717',\n              shadowOffset: {\n                width: -2,\n                height: 4\n              },\n              shadowOpacity: 0.2,\n              shadowRadius: 3,\n              marginTop: 15,\n              borderRadius: 10\n            },\n            onPress: function onPress() {\n              navigation.navigate(\"FoodDetail\", {\n                foodData: item,\n                Kcal: findCalories(item.ingradient)\n              });\n            },\n            children: _jsxs(View, {\n              style: {\n                flexDirection: 'row'\n              },\n              children: [_jsx(View, {\n                style: {\n                  width: '40%'\n                },\n                children: _jsx(Image, {\n                  style: {\n                    width: '100%',\n                    height: 125,\n                    borderBottomLeftRadius: 10,\n                    borderTopLeftRadius: 10\n                  },\n                  source: {\n                    uri: item.image\n                  }\n                })\n              }), _jsxs(View, {\n                style: {\n                  width: '60%',\n                  height: 'auto',\n                  padding: 15\n                },\n                children: [_jsxs(Text, {\n                  style: {\n                    fontSize: 16,\n                    fontWeight: '700'\n                  },\n                  children: [item.foodTitle, \" \", _jsxs(Text, {\n                    style: {\n                      fontSize: 12,\n                      fontWeight: '300'\n                    },\n                    children: [findCalories(item.ingradient), \" Kcal\"]\n                  })]\n                }), _jsxs(Text, {\n                  style: {\n                    fontSize: 12,\n                    fontWeight: '300',\n                    marginTop: 10\n                  },\n                  numberOfLines: 3,\n                  children: [\"    \", item.desc]\n                })]\n              })]\n            })\n          }, index);\n        }\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: 'white'\n  },\n  gridItem: {\n    flex: 1,\n    marginBottom: 10,\n    paddingTop: 5,\n    height: 170\n  },\n  shadowbox: {\n    flex: 1,\n    borderRadius: 10,\n    shadowColor: \"black\",\n    shadowOpacity: 0.26,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 10,\n    elevation: 3,\n    padding: 20,\n    justifyContent: \"flex-end\"\n  },\n  bgImage: {\n    width: \"100%\",\n    height: 250,\n    marginTop: -5,\n    borderRadius: 10\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    textAlign: 'center'\n  },\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    backgroundColor: \"white\",\n    borderRadius: 5,\n    padding: 35,\n    width: '100%',\n    height: 500,\n    alignItems: \"center\",\n    position: 'absolute',\n    bottom: 0,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.5,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  button: {\n    borderRadius: 5,\n    padding: 10,\n    elevation: 2\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 5,\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","db","useSelector","collection","onSnapshot","MealScreen","route","navigation","refreshing","setRefreshing","user","state","user_data","foodTitle","desc","image","ingradient","ingradientName","weight","calories","foodData","setFoodData","snapshot","docs","map","doc","data","findCalories","reduce","a","b","toFixed","styles","container","shadowbox","width","padding","pullMe","item","index","height","backgroundColor","shadowColor","shadowOffset","shadowOpacity","shadowRadius","marginTop","borderRadius","navigate","Kcal","flexDirection","borderBottomLeftRadius","borderTopLeftRadius","uri","fontSize","fontWeight","StyleSheet","create","flex","justifyContent","alignItems","gridItem","marginBottom","paddingTop","elevation","bgImage","title","textAlign","centeredView","modalView","position","bottom","button","textStyle","color","modalText"],"sources":["C:/Users/LENOVO/OneDrive/เอกสาร/GitHub/mdp-proj-2022/screens/Food/FoodScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { StyleSheet, Text, View, FlatList, RefreshControl, TouchableOpacity, Image } from 'react-native';\r\nimport { db } from '../../database/firebase';\r\nimport { useSelector } from 'react-redux';\r\nimport { collection, onSnapshot} from 'firebase/firestore';\r\n\r\nexport default function MealScreen({ route, navigation }) {\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const user = useSelector((state) => state.user_data.user)\r\n\r\n  //ข้อมูลตัวอย่าง\r\n  const [foodData, setFoodData] = useState([\r\n    { //ย้ำ ข้อมูลตัวอย่าง\r\n      foodTitle : 'Beef Burger',\r\n      desc : 'หร่อยจัดหร่อยจัดหร่อยจัดหร่อยจัดหร่อยจัดหร่อยจัดหร่อยจัดหร่อยจัดหร่อยจัดหร่อยจัดหร่อยจัดหร่อยจัดหร่อยจัดหร่อยจัด',\r\n      image : 'https://cdn.britannica.com/31/122031-050-F8FCA663/Hamburger-cheeseburger.jpg',\r\n      ingradient : [\r\n        { ingradientName : \"Ground Beef\", weight : 100, calories : 250.5 }, //weight เป็นกรัม //calories ต่อ 100 gram (ถ้าทำจริง)\r\n        { ingradientName : \"Bread\", weight : 40, calories : 105.64 },\r\n        { ingradientName : \"Cheese\", weight : 21, calories : 70 },\r\n      ]\r\n    }\r\n  ])\r\n\r\n  useEffect(() => {\r\n    onSnapshot(collection(db, 'foodData'), (snapshot) => {\r\n        setFoodData(snapshot.docs.map(doc => doc.data()))\r\n    })\r\n  }, [])\r\n\r\n  const findCalories = (data) => {\r\n    if(!!data){\r\n      return data.map(data => data.calories * (data.weight/100)).reduce((a, b) => a+b).toFixed(2)\r\n    }\r\n    else{\r\n      return \"\"\r\n    }\r\n  }\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={[styles.shadowbox, { width: \"100%\", padding: 10}]}>\r\n\r\n        <FlatList data={foodData}\r\n          refreshControl={\r\n            <RefreshControl\r\n              refreshing={refreshing}\r\n              onRefresh={() => { pullMe() }} />\r\n          }\r\n          renderItem={({ item, index }) =>\r\n              <TouchableOpacity style={{\r\n                width : \"100%\",\r\n                height : 'auto',\r\n                backgroundColor : 'white',\r\n                shadowColor: '#171717',\r\n                shadowOffset: {width: -2, height: 4},\r\n                shadowOpacity: 0.2,\r\n                shadowRadius: 3,\r\n                marginTop : 15,\r\n                borderRadius : 10\r\n              }} key={index} onPress={() => {navigation.navigate(\"FoodDetail\", {foodData : item, Kcal : findCalories(item.ingradient)})}}>\r\n                <View style={{flexDirection : 'row'}}>\r\n                  <View style={{width : '40%'}}>\r\n                    <Image\r\n                      style={{width : '100%', height : 125,\r\n                      borderBottomLeftRadius : 10,\r\n                      borderTopLeftRadius : 10}}\r\n                      source={{uri: item.image}}\r\n                    />\r\n                  </View>\r\n                  <View style={{width : '60%', height : 'auto', padding : 15}}>\r\n                      <Text style={{fontSize : 16, fontWeight : '700'}}>{item.foodTitle} <Text style={{fontSize : 12, fontWeight : '300'}}>{findCalories(item.ingradient)} Kcal</Text></Text>\r\n                      <Text style={{fontSize : 12, fontWeight : '300', marginTop : 10}} numberOfLines={3}>    {item.desc}</Text>\r\n                  </View>\r\n                </View>\r\n              </TouchableOpacity>\r\n          } />\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: 'white'\r\n  },\r\n  gridItem: {\r\n    flex: 1,\r\n    marginBottom: 10,\r\n    paddingTop: 5,\r\n    height: 170,\r\n  },\r\n  shadowbox: {\r\n    flex: 1,\r\n    borderRadius: 10,\r\n    shadowColor: \"black\",\r\n    shadowOpacity: 0.26,\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowRadius: 10,\r\n    elevation: 3,\r\n    padding: 20,\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  bgImage: {\r\n    width: \"100%\",\r\n    height: 250,\r\n    marginTop: -5,\r\n    borderRadius: 10,\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    textAlign: 'center',\r\n  },\r\n  centeredView: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 22\r\n  },\r\n  modalView: {\r\n    backgroundColor: \"white\",\r\n    borderRadius: 5,\r\n    padding: 35,\r\n    width: '100%',\r\n    height: 500,\r\n    alignItems: \"center\",\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2\r\n    },\r\n    shadowOpacity: 0.5,\r\n    shadowRadius: 4,\r\n    elevation: 5\r\n  },\r\n  button: {\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    elevation: 2\r\n  },\r\n  textStyle: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\"\r\n  },\r\n  modalText: {\r\n    marginBottom: 5,\r\n    textAlign: \"center\"\r\n  }\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}