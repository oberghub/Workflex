{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function HealthCalculatorScreen(_ref) {\n  var _this = this;\n\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      height = _useState2[0],\n      setHeight = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      weight = _useState4[0],\n      setWeight = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      Bmi = _useState6[0],\n      setBmi = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      BmiResult = _useState8[0],\n      setBmiResult = _useState8[1];\n\n  var calculate = function calculate(height, weight) {\n    var result = parseFloat(weight) * 10000 / (parseFloat(height) * parseFloat(height));\n    result = result.toFixed(2);\n    setBmi(result);\n\n    if (result < 18.5) {\n      setBmiResult('Underweight');\n    } else if (result >= 18.5 && result < 25) {\n      setBmiResult('Normal weight');\n    } else if (result >= 25 && result < 30) {\n      setBmiResult('Overweight');\n    } else if (result >= 30) {\n      setBmiResult('Obese');\n    } else {\n      alert('Incorrect Input!');\n\n      _this.setState({\n        BmiResult: ''\n      });\n    }\n  };\n\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: {\n        width: '100%',\n        padding: 10\n      },\n      children: [_jsx(Text, {\n        children: \"Height(cm.)\"\n      }), _jsx(TextInput, {\n        style: styles.heightAndWeight,\n        onChangeText: setHeight,\n        value: height\n      }), _jsx(Text, {\n        children: \"Weight(kg.)\"\n      }), _jsx(TextInput, {\n        style: styles.heightAndWeight,\n        onChangeText: setWeight,\n        value: weight\n      }), _jsx(TouchableOpacity, {\n        style: styles.submitButton,\n        onPress: function onPress() {\n          return calculate(height, weight);\n        },\n        children: _jsx(Text, {\n          style: styles.submitButtonText,\n          children: \" Calculate \"\n        })\n      }), _jsx(Text, {\n        style: styles.output,\n        children: Bmi\n      }), _jsx(Text, {\n        style: styles.resultText,\n        children: BmiResult\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: \"center\",\n    padding: 30,\n    width: '100%'\n  },\n  heightAndWeight: {\n    height: 40,\n    width: \"100%\",\n    borderWidth: 0.5,\n    borderColor: \"lightgray\",\n    borderRadius: 3,\n    padding: 10,\n    marginTop: 10\n  },\n  submitButton: {\n    backgroundColor: '#ff6666',\n    padding: 10,\n    margin: 15,\n    height: 40\n  },\n  submitButtonText: {\n    textAlign: \"center\",\n    color: 'white',\n    fontWeight: \"bold\",\n    fontSize: 18\n  },\n  output: {\n    textAlign: \"center\",\n    fontSize: 30\n  },\n  resultText: {\n    paddingTop: 20,\n    paddingBottom: 10,\n    textAlign: \"center\",\n    fontSize: 30,\n    color: 'blue',\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"names":["StatusBar","useState","HealthCalculatorScreen","route","navigation","height","setHeight","weight","setWeight","Bmi","setBmi","BmiResult","setBmiResult","calculate","result","parseFloat","toFixed","alert","setState","styles","container","width","padding","heightAndWeight","submitButton","submitButtonText","output","resultText","StyleSheet","create","flex","backgroundColor","alignItems","borderWidth","borderColor","borderRadius","marginTop","margin","textAlign","color","fontWeight","fontSize","paddingTop","paddingBottom"],"sources":["C:/mdp-proj-2022/screens/Calculate/HealthCalcutarorScreen.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport { StyleSheet, Text, View, TextInput, TouchableOpacity } from 'react-native';\r\nimport { useState } from 'react';\r\n\r\nexport default function HealthCalculatorScreen({ route, navigation }) {\r\n  const [height, setHeight] = useState(\"\")\r\n  const [weight, setWeight] = useState(\"\")\r\n  const [Bmi, setBmi] = useState(\"\")\r\n  const [BmiResult, setBmiResult] = useState(\"\")\r\n\r\n  const calculate = (height, weight) => {\r\n    var result = (parseFloat(weight) * 10000) / (parseFloat(height) * parseFloat(height));\r\n    result = result.toFixed(2);\r\n    setBmi(result);\r\n    if (result < 18.5) {\r\n      setBmiResult('Underweight')\r\n    }\r\n    else if (result >= 18.5 && result < 25) {\r\n      setBmiResult('Normal weight')\r\n    }\r\n    else if (result >= 25 && result < 30) {\r\n      setBmiResult('Overweight')\r\n    }\r\n    else if (result >= 30) {\r\n      setBmiResult('Obese')\r\n    }\r\n    else {\r\n      alert('Incorrect Input!');\r\n      this.setState({ BmiResult: '' })\r\n    }\r\n  }\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={{\r\n        width: '100%',\r\n        padding: 10,\r\n      }}>\r\n        <Text>Height(cm.)</Text>\r\n        <TextInput\r\n          style={styles.heightAndWeight}\r\n          onChangeText={setHeight}\r\n          value={height}\r\n        />\r\n        <Text>Weight(kg.)</Text>\r\n        <TextInput\r\n          style={styles.heightAndWeight}\r\n          onChangeText={setWeight}\r\n          value={weight}\r\n        />\r\n        <TouchableOpacity\r\n          style={styles.submitButton}\r\n          onPress={\r\n            () => calculate(height, weight)\r\n          }>\r\n          <Text style={styles.submitButtonText}> Calculate </Text>\r\n        </TouchableOpacity>\r\n        <Text style={styles.output}>{Bmi}</Text>\r\n        <Text style={styles.resultText}>{BmiResult}</Text>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: \"center\",\r\n    padding: 30,\r\n    width: '100%'\r\n  },\r\n  heightAndWeight: {\r\n    height: 40,\r\n    width: \"100%\",\r\n    borderWidth: 0.5,\r\n    borderColor: \"lightgray\",\r\n    borderRadius: 3,\r\n    padding: 10,\r\n    marginTop: 10\r\n  },\r\n  submitButton: {\r\n    backgroundColor: '#ff6666',\r\n    padding: 10,\r\n    margin: 15,\r\n    height: 40,\r\n  },\r\n  submitButtonText: {\r\n    textAlign: \"center\",\r\n    color: 'white',\r\n    fontWeight: \"bold\",\r\n    fontSize: 18,\r\n  },\r\n  output: {\r\n    textAlign: \"center\",\r\n    fontSize: 30,\r\n  }, \r\n  resultText: {\r\n    paddingTop: 20,\r\n    paddingBottom: 10,\r\n    textAlign: \"center\",\r\n    fontSize: 30,\r\n    color: 'blue',\r\n    fontWeight:\"bold\"\r\n  },\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}