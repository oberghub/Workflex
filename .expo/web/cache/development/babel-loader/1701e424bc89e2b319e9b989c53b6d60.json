{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { useState, useEffect } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { db } from \"../../database/firebase\";\nimport { collection, addDoc, onSnapshot, deleteDoc, query, orderBy, doc, where, updateDoc } from 'firebase/firestore';\nimport { useSelector } from 'react-redux';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function CommunityScreen(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    newPost = _useState2[0],\n    setNewPost = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    refreshing = _useState4[0],\n    setRefreshing = _useState4[1];\n  var postIdGenerate = function postIdGenerate() {\n    return Date.now().toString(36) + Math.random().toString(36).substring(2);\n  };\n\n  useEffect(function () {\n    var postQuery = query(collection(db, \"post\"), orderBy(\"timeStamp\"));\n    onSnapshot(postQuery, function (snapshot) {\n      setFeedData(snapshot.docs.map(function (doc) {\n        return doc.data();\n      }));\n      setDocId(snapshot.docs.map(function (doc) {\n        return doc.id;\n      }));\n    });\n\n    onSnapshot(collection(db, 'comment'), function (snapshot) {\n      setCommentData(snapshot.docs.map(function (doc) {\n        return doc.data();\n      }));\n      setCommentDocId(snapshot.docs.map(function (doc) {\n        return doc.id;\n      }));\n    });\n\n    var likedQuery = query(collection(db, 'likedPost'), where(\"uid\", \"==\", user.uid));\n    onSnapshot(likedQuery, function (snapshot) {\n      setLikedData(snapshot.docs.map(function (doc) {\n        return doc.data();\n      }));\n      setLikedDocId(snapshot.docs.map(function (doc) {\n        return doc.id;\n      }));\n    });\n  }, []);\n  var pullMe = function pullMe() {\n    setRefreshing(true);\n    setTimeout(function () {\n      setRefreshing(false);\n      console.log(\"Refresh...\");\n    }, 1000);\n  };\n\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    feedData = _useState6[0],\n    setFeedData = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    docId = _useState8[0],\n    setDocId = _useState8[1];\n\n  var _useState9 = useState([]),\n    _useState10 = _slicedToArray(_useState9, 2),\n    commentData = _useState10[0],\n    setCommentData = _useState10[1];\n  var _useState11 = useState([]),\n    _useState12 = _slicedToArray(_useState11, 2),\n    commentDocId = _useState12[0],\n    setCommentDocId = _useState12[1];\n  var _useState13 = useState([]),\n    _useState14 = _slicedToArray(_useState13, 2),\n    likedData = _useState14[0],\n    setLikedData = _useState14[1];\n  var _useState15 = useState([]),\n    _useState16 = _slicedToArray(_useState15, 2),\n    likedDocId = _useState16[0],\n    setLikedDocId = _useState16[1];\n  var user = useSelector(function (state) {\n    return state.user_data.user;\n  });\n  var sendAPost = function sendAPost() {\n    var getDate = new Date() + \"\";\n    var date = getDate.substring(8, 10) + \" \" + getDate.substring(4, 7) + \" \" + getDate.substring(11, 15);\n    var time = getDate.substring(16, 21);\n    if (newPost === \"\") {\n      console.log(\"\");\n    } else {\n      var postId = postIdGenerate();\n      try {\n        addDoc(collection(db, \"post\"), {\n          postId: postId,\n          userName: user.displayName,\n          postTitle: newPost,\n          timeStamp: date + \" , \" + time,\n          likeCount: 0,\n          uid: user.uid\n        });\n      } catch (e) {\n        console.log(e);\n      }\n      setNewPost(\"\");\n    }\n  };\n  var deleteAPost = function deleteAPost(docId, commentDocIndex) {\n    Alert.alert(\"ลบ\", \"ต้องการลบโพสต์ของคุณหรือไม่\", [{\n      text: 'ยกเลิก',\n      onPress: function onPress() {\n        console.log(\"ม่ายได้ลบ งือ\");\n      },\n      style: \"cancel\"\n    }, {\n      text: \"ตกลง\",\n      onPress: function onPress() {\n        try {\n          deleteDoc(doc(db, 'post', docId));\n\n          for (var i = 0; i < commentDocIndex.length; i++) {\n            deleteDoc(doc(db, 'comment', commentDocId[commentDocIndex[i]]));\n          }\n        } catch (e) {\n          console.log(e);\n        }\n      }\n    }]);\n  };\n  var addLiked = function addLiked(userId, postId, docId, likeUpdate) {\n    try {\n      addDoc(collection(db, \"likedPost\"), {\n        postId: postId,\n        userName: user.displayName,\n        uid: userId\n      });\n      updateDoc(doc(db, \"post\", docId), {\n        likeCount: likeUpdate\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  var unLiked = function unLiked(likeDocIndex, docId, likeUpdate) {\n    try {\n      deleteDoc(doc(db, 'likedPost', likedDocId[likeDocIndex[0]]));\n      updateDoc(doc(db, \"post\", docId), {\n        likeCount: likeUpdate\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: {\n        flexDirection: 'row',\n        width: '100%',\n        height: 70,\n        paddingLeft: 20,\n        paddingTop: 10\n      },\n      children: _jsx(View, {\n        style: {\n          width: '50%'\n        },\n        children: _jsx(Text, {\n          style: {\n            fontSize: 28,\n            fontWeight: '700'\n          },\n          children: \"\\u0E1F\\u0E35\\u0E14\"\n        })\n      })\n    }), _jsxs(View, {\n      style: {\n        flexDirection: 'row',\n        width: '95%',\n        padding: 20\n      },\n      children: [_jsx(TextInput, {\n        style: {\n          borderWidth: 1,\n          borderColor: 'lightgray',\n          borderRadius: 5,\n          width: '75%',\n          height: 'auto',\n          marginTop: -10,\n          paddingLeft: 10,\n          paddingTop: 10\n        },\n        placeholder: \"\\u0E40\\u0E02\\u0E35\\u0E22\\u0E19\\u0E42\\u0E1E\\u0E2A\\u0E15\\u0E4C\\u0E17\\u0E35\\u0E48\\u0E19\\u0E35\\u0E48!\",\n        multiline: true,\n        numberOfLines: 4,\n        onChangeText: setNewPost,\n        value: newPost\n      }), _jsx(TouchableOpacity, {\n        style: {\n          height: 40,\n          borderRadius: 5,\n          backgroundColor: 'lightblue',\n          alignItems: 'center',\n          justifyContent: 'center',\n          width: '20%',\n          marginTop: -10,\n          marginLeft: 14\n        },\n        onPress: function onPress() {\n          sendAPost();\n        },\n        children: _jsx(Text, {\n          style: {\n            color: 'white',\n            fontWeight: '600',\n            fontSize: 16\n          },\n          children: \"\\u0E42\\u0E1E\\u0E2A\\u0E15\\u0E4C\"\n        })\n      })]\n    }), feedData.length == 0 ? null : _jsx(FlatList, {\n      style: {\n        width: '100%',\n        paddingLeft: 20,\n        paddingRight: 20\n      },\n      data: feedData,\n      refreshControl: _jsx(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: function onRefresh() {\n          pullMe();\n        }\n      }),\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item,\n          index = _ref2.index;\n        return _jsxs(View, {\n          style: {\n            width: '100%',\n            height: 'auto',\n            borderRadius: 5,\n            padding: 15,\n            marginBottom: 10,\n            shadowColor: '#171717',\n            shadowOffset: {\n              width: -2,\n              height: 4\n            },\n            shadowOpacity: 0.2,\n            shadowRadius: 3,\n            backgroundColor: '#fff'\n          },\n          children: [_jsxs(View, {\n            style: {\n              flexDirection: 'row',\n              width: '100%'\n            },\n            children: [_jsxs(View, {\n              style: {\n                width: '50%',\n                flexDirection: 'row'\n              },\n              children: [_jsx(Text, {\n                style: {\n                  fontWeight: '600'\n                },\n                children: item.userName\n              }), item.uid == user.uid ? _jsx(View, {\n                style: {\n                  marginLeft: 10\n                },\n                children: _jsx(TouchableOpacity, {\n                  onPress: function onPress() {\n                    deleteAPost(docId[index],\n                    commentData.map(function (data, index) {\n                      return data.postId == item.postId ? index : null;\n                    }).filter(function (data) {\n                      return data != null;\n                    }));\n                  },\n                  children: _jsx(Ionicons, {\n                    name: \"ios-trash-outline\",\n                    size: 17,\n                    color: 'lightgray'\n                  })\n                })\n              }) : null]\n            }), _jsx(View, {\n              style: {\n                position: 'absolute',\n                right: 0\n              },\n              children: _jsx(Text, {\n                style: {\n                  position: 'absolute',\n                  right: 0\n                },\n                children: item.timeStamp.split(',')[0]\n              })\n            })]\n          }), _jsx(View, {\n            style: {\n              marginTop: 17,\n              marginBottom: 17,\n              flexDirection: 'row',\n              width: '100%'\n            },\n            children: _jsx(Text, {\n              children: item.postTitle\n            })\n          }), _jsxs(View, {\n            style: {\n              flexDirection: 'row'\n            },\n            children: [likedData.filter(function (data) {\n              return data.postId == item.postId;\n            }).length != 0 ? _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                unLiked(likedData.map(function (data, index) {\n                  return data.postId == item.postId ? index : null;\n                }).filter(function (data) {\n                  return data != null;\n                }), docId[index], item.likeCount - 1);\n              },\n              children: _jsx(Ionicons, {\n                name: \"ios-heart\",\n                size: 22,\n                color: 'red'\n              })\n            }) : _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                addLiked(user.uid, item.postId, docId[index], item.likeCount + 1);\n              },\n              children: _jsx(Ionicons, {\n                name: \"ios-heart-outline\",\n                size: 22,\n                color: 'black'\n              })\n            }), _jsx(Text, {\n              style: {\n                marginLeft: 5,\n                marginTop: 4,\n                marginRight: 10\n              },\n              children: item.likeCount\n            }), _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                navigation.navigate('Post Detail', {\n                  postData: item,\n                  docId: docId[index]\n                });\n              },\n              children: _jsx(Ionicons, {\n                name: \"ios-chatbubble-outline\",\n                size: 22,\n                color: 'black'\n              })\n            }), _jsx(Text, {\n              style: {\n                marginLeft: 5,\n                marginTop: 4\n              },\n              children: commentData.filter(function (data) {\n                return data.postId == item.postId;\n              }).length\n            }), _jsxs(Text, {\n              style: {\n                position: 'absolute',\n                right: 0\n              },\n              children: [item.timeStamp.split(',')[1], \" \\u0E19.\"]\n            })]\n          })]\n        });\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    paddingTop: 20\n  }\n});","map":{"version":3,"names":["Ionicons","useState","useEffect","db","collection","addDoc","onSnapshot","deleteDoc","query","orderBy","doc","where","updateDoc","useSelector","CommunityScreen","route","navigation","newPost","setNewPost","refreshing","setRefreshing","postIdGenerate","Date","now","toString","Math","random","substring","postQuery","snapshot","setFeedData","docs","map","data","setDocId","id","setCommentData","setCommentDocId","likedQuery","user","uid","setLikedData","setLikedDocId","pullMe","setTimeout","console","log","feedData","docId","commentData","commentDocId","likedData","likedDocId","state","user_data","sendAPost","getDate","date","time","postId","userName","displayName","postTitle","timeStamp","likeCount","e","deleteAPost","commentDocIndex","Alert","alert","text","onPress","style","i","length","addLiked","userId","likeUpdate","unLiked","likeDocIndex","styles","container","flexDirection","width","height","paddingLeft","paddingTop","fontSize","fontWeight","padding","borderWidth","borderColor","borderRadius","marginTop","backgroundColor","alignItems","justifyContent","marginLeft","color","paddingRight","item","index","marginBottom","shadowColor","shadowOffset","shadowOpacity","shadowRadius","filter","position","right","split","marginRight","navigate","postData","StyleSheet","create","flex"],"sources":["C:/Users/LENOVO/OneDrive/เอกสาร/GitHub/mdp-proj-2022/screens/Community/CommunityScreen.js"],"sourcesContent":["import { Ionicons } from '@expo/vector-icons';\r\nimport { useState, useEffect } from 'react';\r\nimport { TouchableOpacity, TextInput, RefreshControl, Alert } from 'react-native';\r\nimport { FlatList } from 'react-native';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\n//Store and Get data to firebase\r\nimport { db } from '../../database/firebase';\r\nimport { collection, addDoc, onSnapshot, deleteDoc, query, orderBy, doc, where, updateDoc} from 'firebase/firestore';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function CommunityScreen({route, navigation}) {\r\n  const [newPost, setNewPost] = useState(\"\")\r\n  const [refreshing, setRefreshing] = useState(false);\r\n\r\n  const postIdGenerate = () => {\r\n    return Date.now().toString(36) + Math.random().toString(36).substring(2);\r\n  }\r\n\r\n  //Fetch Data\r\n  useEffect(() => {\r\n\r\n    //Subscribe Firebase event \r\n    const postQuery = query(collection(db, \"post\"), orderBy(\"timeStamp\"))\r\n    onSnapshot(postQuery, (snapshot) => {\r\n      setFeedData(snapshot.docs.map(doc => doc.data()))\r\n      setDocId(snapshot.docs.map(doc => doc.id))\r\n    })\r\n\r\n    //Get comment for count a comment\r\n    onSnapshot(collection(db, 'comment'), (snapshot) => {\r\n      setCommentData(snapshot.docs.map(doc => doc.data()))\r\n      setCommentDocId(snapshot.docs.map(doc => doc.id))\r\n    })\r\n\r\n    //Query account liked post\r\n    const likedQuery = query(collection(db, 'likedPost'), where(\"uid\", \"==\", user.uid))\r\n    onSnapshot(likedQuery, (snapshot) => {\r\n      setLikedData(snapshot.docs.map(doc => doc.data()))\r\n      setLikedDocId(snapshot.docs.map(doc => doc.id))\r\n    })\r\n\r\n  }, [])\r\n\r\n  const pullMe = () => {\r\n    setRefreshing(true)\r\n\r\n    setTimeout(() => {\r\n      setRefreshing(false)\r\n      console.log(\"Refresh...\")\r\n    }, 1000)\r\n  }\r\n\r\n  //** docId ใน firebase ไว้ใช้เข้าถึงข้อมูลแถวนั้นๆ **/\r\n\r\n  const [feedData, setFeedData] = useState([])\r\n  const [docId, setDocId] = useState([]) //docId from Firebase *ใช้ลบข้อมูล เอา id นี้ไปใส่\r\n\r\n  const [commentData, setCommentData] = useState([])\r\n  const [commentDocId, setCommentDocId] = useState([])\r\n\r\n  const [likedData, setLikedData] = useState([])\r\n  const [likedDocId, setLikedDocId] = useState([])\r\n\r\n\r\n  const user = useSelector((state) => state.user_data.user)\r\n\r\n  const sendAPost = () => {\r\n    let getDate = new Date()+\"\"\r\n    let date = getDate.substring(8, 10) + \" \" + getDate.substring(4, 7) + \" \" + getDate.substring(11, 15)\r\n    let time = getDate.substring(16, 21)\r\n    if(newPost === \"\"){\r\n      console.log(\"\")\r\n    }\r\n    else{\r\n      const postId = postIdGenerate()\r\n      try{\r\n        addDoc(collection(db, \"post\"), {\r\n          postId : postId,\r\n          userName : user.displayName,\r\n          postTitle : newPost,\r\n          timeStamp : date + \" , \" + time,\r\n          likeCount : 0,\r\n          uid : user.uid\r\n        })\r\n      }\r\n      catch(e){\r\n        console.log(e)\r\n      }\r\n      setNewPost(\"\")\r\n    }\r\n  }\r\n\r\n  const deleteAPost = (docId, commentDocIndex) => {\r\n    Alert.alert(\r\n      \"ลบ\",\r\n      \"ต้องการลบโพสต์ของคุณหรือไม่\",\r\n      [\r\n        {\r\n          text : 'ยกเลิก',\r\n          onPress : () => {console.log(\"ม่ายได้ลบ งือ\")},\r\n          style : \"cancel\"\r\n        },\r\n        {\r\n          text : \"ตกลง\",\r\n          onPress : () => {\r\n            try{\r\n              deleteDoc(doc(db, 'post', docId))\r\n\r\n              //Delete multiple record\r\n              for(let i=0;i<commentDocIndex.length;i++){\r\n                deleteDoc(doc(db, 'comment', commentDocId[commentDocIndex[i]]))\r\n              }\r\n            }\r\n            catch(e){\r\n              console.log(e)\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    )\r\n  }\r\n\r\n  const addLiked = (userId, postId, docId, likeUpdate) => {\r\n    try{\r\n      addDoc(collection(db, \"likedPost\"), {\r\n        postId : postId,\r\n        userName : user.displayName,\r\n        uid : userId\r\n      })\r\n\r\n      updateDoc(doc(db, \"post\", docId), {\r\n        likeCount : likeUpdate\r\n      })\r\n    }\r\n    catch(e){\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  const unLiked = (likeDocIndex, docId, likeUpdate) => {\r\n    try{\r\n      deleteDoc(doc(db, 'likedPost', likedDocId[likeDocIndex[0]]))\r\n      updateDoc(doc(db, \"post\", docId), {\r\n        likeCount : likeUpdate\r\n      })\r\n    }\r\n    catch(e){\r\n      console.log(e)\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={{flexDirection : 'row',\r\n                    width : '100%',\r\n                    height : 70,\r\n                    paddingLeft : 20,\r\n                    paddingTop : 10}}>\r\n        <View style={{width : '50%'}}>\r\n            <Text style={{fontSize : 28, fontWeight : '700'}}>ฟีด</Text>\r\n        </View>\r\n      </View>\r\n\r\n      <View style={{flexDirection : 'row', width : '95%', padding : 20}}>\r\n          <TextInput style={{borderWidth : 1,\r\n                            borderColor : 'lightgray',\r\n                            borderRadius : 5,\r\n                            width : '75%',\r\n                            height : 'auto',\r\n                            marginTop : -10,\r\n                            paddingLeft : 10,\r\n                            paddingTop : 10}}\r\n                      placeholder=\"เขียนโพสต์ที่นี่!\"\r\n                      multiline={true}\r\n                      numberOfLines={4}\r\n                      onChangeText={setNewPost}\r\n                      value={newPost} />\r\n          <TouchableOpacity style={{height : 40, \r\n                                    borderRadius : 5,\r\n                                    backgroundColor : 'lightblue', \r\n                                    alignItems : 'center', \r\n                                    justifyContent : 'center',\r\n                                    width : '20%', marginTop : -10, marginLeft : 14}}\r\n                                    onPress={() => {sendAPost()}}>\r\n            <Text style={{color : 'white', fontWeight : '600', fontSize : 16}}>โพสต์</Text>\r\n          </TouchableOpacity>\r\n      </View>\r\n\r\n      {feedData.length == 0 ? null : \r\n        <FlatList style={{width : '100%', paddingLeft : 20, paddingRight : 20}}\r\n        data={feedData} \r\n        refreshControl={\r\n          <RefreshControl\r\n            refreshing={refreshing}\r\n            onRefresh={() => { pullMe() }} />\r\n        }\r\n        renderItem={({item, index}) => {\r\n          return <View\r\n                  style={{width : '100%',\r\n                  height : 'auto',\r\n                  borderRadius : 5,\r\n                  padding : 15, marginBottom : 10,\r\n                  shadowColor: '#171717',\r\n                  shadowOffset: {width: -2, height: 4},\r\n                  shadowOpacity: 0.2,\r\n                  shadowRadius: 3,\r\n                  backgroundColor : '#fff'\r\n                  }}>\r\n                  <View style={{flexDirection : 'row', width : '100%'}}>\r\n                    <View style={{width : '50%', flexDirection : 'row'}}>\r\n                      <Text style={{fontWeight : '600'}}>{item.userName}</Text>\r\n                      {item.uid == user.uid ? \r\n                      <View style={{marginLeft : 10}}>\r\n                        <TouchableOpacity onPress={() => {deleteAPost(docId[index], \r\n                                                          //Map เอา Index ที่จะไปเอาข้อมูลใน commentDocId เพื่อเอามาลบ comment ของ post ออกไป\r\n                                                          commentData.map((data, index) => data.postId == item.postId ? index : null).filter(data => data != null))}}>\r\n                          <Ionicons name='ios-trash-outline' size={17} color={'lightgray'} />\r\n                        </TouchableOpacity>\r\n                      </View>\r\n                      :\r\n                      null\r\n                      }\r\n                    </View>\r\n                    <View style={{position : 'absolute', right : 0}}>\r\n                      <Text style={{position : 'absolute', right : 0}}>{item.timeStamp.split(',')[0]}</Text>\r\n                    </View>\r\n                  </View>\r\n\r\n                  <View style={{marginTop : 17, marginBottom : 17, flexDirection : 'row', width : '100%'}}>\r\n                    <Text>{item.postTitle}</Text>\r\n                  </View>\r\n\r\n                  <View style={{flexDirection : 'row',}}>\r\n                      {likedData.filter(data => data.postId == item.postId).length != 0 ? \r\n                        <TouchableOpacity onPress={() => {unLiked(likedData.map((data, index) => data.postId == item.postId ? index : null).filter(data => data != null),\r\n                                                                  docId[index], item.likeCount-1)}}>\r\n                          <Ionicons name='ios-heart' size={22} color={'red'}/>\r\n                        </TouchableOpacity>\r\n                        :\r\n                        <TouchableOpacity onPress={() => {addLiked(user.uid, item.postId, docId[index], item.likeCount+1)}}>\r\n                          <Ionicons name='ios-heart-outline' size={22} color={'black'}/>\r\n                        </TouchableOpacity>\r\n                      }\r\n\r\n                      <Text style={{marginLeft : 5, marginTop : 4, marginRight : 10}}>{item.likeCount}</Text>\r\n\r\n                      <TouchableOpacity onPress={() => {\r\n                        navigation.navigate('Post Detail', { postData : item, docId : docId[index] })\r\n                      }}>\r\n                        <Ionicons name='ios-chatbubble-outline' size={22} color={'black'}/>\r\n                      </TouchableOpacity>\r\n\r\n                      <Text style={{marginLeft : 5, marginTop : 4}}>{commentData.filter(data => data.postId == item.postId).length}</Text>\r\n\r\n                      <Text style={{position : 'absolute', right : 0}}>{item.timeStamp.split(',')[1]} น.</Text>\r\n                  </View>\r\n          </View>\r\n        }}/>\r\n      }\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    paddingTop : 20,\r\n    // justifyContent: 'center',\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}