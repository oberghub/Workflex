{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport { MYCATEGORIES as data } from \"../../data/dummy-data\";\nimport { EXECISES as exerciseList } from \"../../data/dummy-data\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MyCoursesScreen = function MyCoursesScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(data),\n    _useState2 = _slicedToArray(_useState, 2),\n    courseList = _useState2[0],\n    setCourseList = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    refreshing = _useState4[0],\n    setRefreshing = _useState4[1];\n  var sumOfSec = function sumOfSec(time) {\n    var min = parseInt(time.map(function (time) {\n      return time.sec;\n    }).reduce(function (prev, curr) {\n      return prev + curr;\n    }) / 60);\n    var sec = time.map(function (time) {\n      return time.sec;\n    }).reduce(function (prev, curr) {\n      return prev + curr;\n    }) % 60;\n    return min == 0 ? \" : \" + sec + \" sec\" : \" : \" + min + \" min \" + sec + \" sec\";\n  };\n  var pullMe = function pullMe() {\n    setRefreshing(true);\n    setTimeout(function () {\n      setRefreshing(false);\n      console.log(\"eiei\");\n    }, 1000);\n  };\n  if (courseList.length == 0) {\n    return _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: {\n          fontSize: 18,\n          fontWeight: '500',\n          color: 'lightgray'\n        },\n        children: \"OOPS! Not found a course\"\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          navigation.navigate(\"New Course\");\n        },\n        children: _jsx(Ionicons, {\n          name: \"ios-add-circle-outline\",\n          size: 150,\n          color: 'lightgray'\n        })\n      }), _jsx(TouchableOpacity, {\n        refreshControl: _jsx(RefreshControl, {\n          refreshing: refreshing,\n          onRefresh: function onRefresh() {\n            pullMe();\n          }\n        }),\n        onPress: function onPress() {\n          pullMe();\n        },\n        style: {},\n        children: _jsx(Ionicons, {\n          name: \"ios-refresh\",\n          size: 30,\n          color: 'lightgray'\n        })\n      })]\n    });\n  } else {\n    return _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(View, {\n        style: [styles.shadowbox, {\n          width: \"100%\",\n          padding: 10\n        }],\n        children: _jsx(FlatList, {\n          data: courseList,\n          renderItem: function renderItem(_ref2) {\n            var item = _ref2.item,\n              index = _ref2.index;\n            return _jsxs(View, {\n              style: {\n                height: 150,\n                width: '100%',\n                borderWidth: 1,\n                borderColor: 'lightgray',\n                borderRadius: 10,\n                marginBottom: 15,\n                backgroundColor: item.color\n              },\n              children: [_jsxs(View, {\n                style: [styles.gridItem, {\n                  padding: 10,\n                  paddingTop: 15\n                }],\n                children: [_jsx(Text, {\n                  style: [styles.txtImg, {\n                    marginBottom: 15\n                  }],\n                  children: item.title\n                }), _jsxs(Text, {\n                  style: {\n                    fontSize: 18,\n                    fontWeight: '500'\n                  },\n                  children: [exerciseList.filter(function (posture) {\n                    return posture.courseId == item.id;\n                  }).length, \" Posture\", sumOfSec(exerciseList.filter(function (data) {\n                    return data.courseId == item.id;\n                  }))]\n                })]\n              }), _jsx(TouchableOpacity, {\n                style: {\n                  width: '100%',\n                  height: 40,\n                  backgroundColor: 'lightblue',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  borderRadius: 5\n                },\n                onPress: function onPress() {\n                  navigation.navigate(\"Play a Course\", {\n                    exerciseList: exerciseList,\n                    courseId: item.id,\n                    title: item.title\n                  });\n                  console.log(exerciseList);\n                },\n                options: function options(_ref3) {\n                  var route = _ref3.route;\n                  return {\n                    title: route.params.title.toString()\n                  };\n                },\n                children: _jsx(Ionicons, {\n                  name: \"ios-exit-outline\",\n                  size: 20,\n                  color: 'black'\n                })\n              })]\n            });\n          }\n        })\n      }), _jsx(Text, {\n        style: {\n          color: 'lightgray',\n          marginBottom: 9\n        },\n        children: \"If these list haven't update, please pull page to refresh.\"\n      })]\n    });\n  }\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  gridItem: {\n    flex: 1,\n    marginBottom: 10,\n    paddingTop: 5,\n    height: 170\n  },\n  txtImg: {\n    fontSize: 32,\n    fontWeight: '700',\n    color: \"#000\"\n  },\n\n  shadowbox: {\n    flex: 1,\n    borderRadius: 10,\n    shadowColor: \"black\",\n    shadowOpacity: 0.26,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 10,\n    elevation: 3,\n    padding: 20,\n    justifyContent: \"flex-end\"\n  },\n  bgImage: {\n    width: \"100%\",\n    height: 250,\n    marginTop: -5,\n    borderRadius: 10\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    textAlign: 'center'\n  }\n});\nexport default MyCoursesScreen;","map":{"version":3,"names":["React","useState","MYCATEGORIES","data","EXECISES","exerciseList","Ionicons","ScrollView","MyCoursesScreen","navigation","courseList","setCourseList","refreshing","setRefreshing","sumOfSec","time","min","parseInt","map","sec","reduce","prev","curr","pullMe","setTimeout","console","log","length","styles","container","fontSize","fontWeight","color","navigate","shadowbox","width","padding","item","index","height","borderWidth","borderColor","borderRadius","marginBottom","backgroundColor","gridItem","paddingTop","txtImg","title","filter","posture","courseId","id","alignItems","justifyContent","route","params","toString","StyleSheet","create","flex","shadowColor","shadowOpacity","shadowOffset","shadowRadius","elevation","bgImage","marginTop","textAlign"],"sources":["C:/Users/LENOVO/OneDrive/เอกสาร/GitHub/mdp-proj-2022/screens/MyCourses/MyCoursesScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { StyleSheet, Text, View, FlatList, TouchableOpacity, RefreshControl } from 'react-native';\r\nimport { MYCATEGORIES as data } from \"../../data/dummy-data\";\r\nimport { EXECISES as exerciseList } from \"../../data/dummy-data\";\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { ScrollView } from 'react-native-gesture-handler';\r\nconst MyCoursesScreen = ({navigation})  => {\r\n  const [courseList, setCourseList] = useState(data)\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const sumOfSec = (time) => {\r\n    const min = parseInt(time.map(time => time.sec).reduce((prev, curr) => prev + curr) / 60)\r\n    const sec = time.map(time => time.sec).reduce((prev, curr) => prev + curr) % 60\r\n    //console.log(time.map(time => time.sec).reduce((prev, curr) => prev + curr))\r\n    return min == 0 ? \" : \" + sec + \" sec\" : \" : \" + min + \" min \" + sec + \" sec\"\r\n  }\r\n\r\n  const pullMe = () => {\r\n    setRefreshing(true)\r\n\r\n    setTimeout(() => {\r\n      setRefreshing(false)\r\n      console.log(\"eiei\")\r\n    }, 1000)\r\n  }\r\n\r\n  if(courseList.length == 0){\r\n    return(\r\n    <View style={styles.container}>\r\n      <Text style={{fontSize : 18, fontWeight : '500', color : 'lightgray'}}>OOPS! Not found a course</Text>\r\n      <TouchableOpacity onPress={() => {\r\n              navigation.navigate(\"New Course\")\r\n          }}>\r\n            <Ionicons name=\"ios-add-circle-outline\" size={150} color={'lightgray'}></Ionicons>\r\n      </TouchableOpacity>\r\n      <TouchableOpacity \r\n        refreshControl={\r\n          <RefreshControl \r\n          refreshing={refreshing} \r\n          onRefresh={() => {pullMe()}}/>\r\n        }\r\n        onPress={() => {pullMe()}}\r\n        style={{}}\r\n      >\r\n        <Ionicons name=\"ios-refresh\" size={30} color={'lightgray'}/>\r\n      </TouchableOpacity>\r\n    </View>\r\n    )\r\n  }\r\n  else{\r\n    return (\r\n      <View style={styles.container}>\r\n\r\n        <View style={[styles.shadowbox, {width : \"100%\", padding : 10}]}>\r\n\r\n          <FlatList data={courseList} \r\n          renderItem={({item, index}) => \r\n              <View style={{height : 150, \r\n                            width : '100%',\r\n                            borderWidth : 1, \r\n                            borderColor : 'lightgray', \r\n                            borderRadius : 10,\r\n                            marginBottom : 15,\r\n                            backgroundColor : item.color}}>      \r\n                <View style={[styles.gridItem, {padding : 10, paddingTop : 15}]}>\r\n                  <Text style={[styles.txtImg, {marginBottom : 15}]}>{item.title}</Text>\r\n                  <Text style={{fontSize : 18, fontWeight : '500'}}>{exerciseList.filter(posture => posture.courseId == item.id).length} Posture \r\n                  {sumOfSec(exerciseList.filter(data => data.courseId == item.id))}\r\n                  </Text>\r\n                </View>\r\n\r\n                <TouchableOpacity style={{width : '100%', \r\n                                          height : 40, \r\n                                          backgroundColor : 'lightblue',\r\n                                          alignItems : 'center',\r\n                                          justifyContent : 'center',\r\n                                          borderRadius : 5}}\r\n                  onPress={() => {\r\n                    navigation.navigate(\"Play a Course\", {exerciseList : exerciseList, courseId: item.id, title:item.title})\r\n                    console.log(exerciseList)\r\n                  }}\r\n                  options={({ route }) => ({\r\n                    title: route.params.title.toString(),\r\n                  })}>\r\n                    <Ionicons name='ios-exit-outline' size={20} color={'black'}/>\r\n                </TouchableOpacity>\r\n            </View>\r\n          } />\r\n\r\n        </View>\r\n          <Text style={{color : 'lightgray', marginBottom : 9}}>If these list haven't update, please pull page to refresh.</Text>\r\n      </View>\r\n    );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  gridItem: {\r\n    flex: 1,\r\n    marginBottom: 10,\r\n    paddingTop:5,\r\n    height: 170,\r\n  },\r\n  txtImg:{\r\n        //fontFamily: 'Kanit_400Regular', //เอาไว้ค่อย import มาใหม่\r\n        fontSize:32,\r\n        fontWeight : '700',\r\n        color:\"#000\",\r\n        // textShadowColor:'#585858',\r\n        // textShadowOffset:{width: 5, height: 5},\r\n        // textShadowRadius:10,\r\n    },\r\n  shadowbox: {\r\n    flex: 1,\r\n    borderRadius: 10,\r\n    shadowColor: \"black\",\r\n    shadowOpacity: 0.26,\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowRadius: 10,\r\n    elevation: 3,\r\n    padding: 20,\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  bgImage: {\r\n    width: \"100%\",\r\n    height: 250,\r\n    marginTop : -5,\r\n    borderRadius : 10,\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\nexport default MyCoursesScreen;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}