{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var FoodDetail = function FoodDetail(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var _route$params = route.params,\n    foodData = _route$params.foodData,\n    Kcal = _route$params.Kcal;\n  var _useState = useState(foodData.ingradient),\n    _useState2 = _slicedToArray(_useState, 2),\n    ingradient = _useState2[0],\n    setIngradient = _useState2[1];\n  var abc = function abc() {\n    console.log(ingradient);\n  };\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      padding: 10\n    },\n    children: [_jsx(View, {\n      style: {\n        width: '100%'\n      },\n      children: _jsx(Image, {\n        style: {\n          width: '100%',\n          height: 200,\n          borderRadius: 10\n        },\n        source: {\n          uri: foodData.image\n        }\n      })\n    }), _jsx(ScrollView, {\n      children: _jsxs(View, {\n        style: {\n          width: '100%',\n          height: 'auto',\n          backgroundColor: 'white',\n          shadowColor: '#171717',\n          shadowOffset: {\n            width: -2,\n            height: 4\n          },\n          shadowOpacity: 0.2,\n          shadowRadius: 3,\n          borderRadius: 10,\n          marginTop: 15,\n          padding: 15\n        },\n        children: [_jsxs(Text, {\n          style: {\n            fontSize: 24,\n            fontWeight: '700'\n          },\n          children: [foodData.foodTitle, \" \", _jsxs(Text, {\n            style: {\n              fontSize: 14,\n              fontWeight: '300'\n            },\n            children: [Kcal, \" Kcal\"]\n          }), \" \"]\n        }), _jsxs(Text, {\n          style: {\n            fontSize: 14,\n            fontWeight: '300',\n            marginTop: 10\n          },\n          children: [\"\\u2022 \", foodData.desc]\n        }), _jsx(Text, {\n          style: {\n            fontSize: 16,\n            fontWeight: '400',\n            marginTop: 10\n          },\n          children: \"\\u0E27\\u0E31\\u0E15\\u0E16\\u0E38\\u0E14\\u0E34\\u0E1A\"\n        }), ingradient.map(function (item, index) {\n          return _jsxs(Text, {\n            style: {\n              fontSize: 14,\n              fontWeight: '300'\n            },\n            children: [\"- \", item.ingradientName, \" \", item.weight, \"g\"]\n          }, index);\n        }), _jsx(Text, {\n          style: {\n            fontSize: 16,\n            fontWeight: '400',\n            marginTop: 10\n          },\n          children: \"\\u0E27\\u0E34\\u0E18\\u0E35\\u0E17\\u0E33\"\n        }), _jsxs(Text, {\n          style: {\n            fontSize: 14,\n            fontWeight: '300'\n          },\n          children: [\"\\u2022 \", foodData.howTo]\n        })]\n      })\n    })]\n  });\n};","map":{"version":3,"names":["React","useState","FoodDetail","route","navigation","params","foodData","Kcal","ingradient","setIngradient","abc","console","log","flex","alignItems","padding","width","height","borderRadius","uri","image","backgroundColor","shadowColor","shadowOffset","shadowOpacity","shadowRadius","marginTop","fontSize","fontWeight","foodTitle","desc","map","item","index","ingradientName","weight","howTo"],"sources":["C:/Users/LENOVO/OneDrive/เอกสาร/GitHub/mdp-proj-2022/screens/Food/FoodDetail.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Text, View, Image, ScrollView } from \"react-native\";\r\nexport const FoodDetail = ({route, navigation}) => {\r\n    const {foodData, Kcal} = route.params\r\n    const [ingradient, setIngradient] = useState(foodData.ingradient)\r\n    const abc = () => {\r\n        console.log(ingradient)\r\n    }\r\n    return(\r\n        <View style={{\r\n            flex : 1,\r\n            alignItems : 'center',\r\n            padding : 10\r\n        }}\r\n        >\r\n            <View style={{\r\n                width : '100%'\r\n            }}>\r\n                <Image\r\n                    style={{width : '100%', height : 200, borderRadius : 10}}\r\n                    source={{uri: foodData.image}}\r\n                />\r\n            </View>\r\n            <ScrollView>\r\n                <View style={{\r\n                    width : '100%',\r\n                    height : 'auto',\r\n                    backgroundColor : 'white',\r\n                    shadowColor: '#171717',\r\n                    shadowOffset: {width: -2, height: 4},\r\n                    shadowOpacity: 0.2,\r\n                    shadowRadius: 3,\r\n                    borderRadius : 10,\r\n                    marginTop : 15,\r\n                    padding : 15\r\n                }}>\r\n                    <Text style={{fontSize : 24, fontWeight : '700'}}>{foodData.foodTitle} <Text style={{fontSize : 14, fontWeight : '300'}}>{Kcal} Kcal</Text> </Text>\r\n                    <Text style={{fontSize : 14, fontWeight : '300', marginTop : 10}}>• {foodData.desc}</Text>\r\n                    <Text style={{fontSize : 16, fontWeight : '400', marginTop : 10}}>วัตถุดิบ</Text>\r\n                    {ingradient.map((item, index) => {\r\n                    return( \r\n                        <Text key={index} style={{fontSize : 14, fontWeight : '300'}}>- {item.ingradientName} {item.weight}g</Text>\r\n                    )\r\n                    })}\r\n                    <Text style={{fontSize : 16, fontWeight : '400', marginTop : 10}}>วิธีทำ</Text>\r\n                    <Text style={{fontSize : 14, fontWeight : '300'}}>• {foodData.howTo}</Text>\r\n                </View>\r\n            </ScrollView>\r\n        </View>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}