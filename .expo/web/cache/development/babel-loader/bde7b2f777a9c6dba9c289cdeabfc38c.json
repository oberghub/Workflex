{"ast":null,"code":"export default function getDrawerStatusFromState(state) {\n  var _ref, _entry$status;\n\n  if (state.history == null) {\n    throw new Error(\"Couldn't find the drawer status in the state object. Is it a valid state object of drawer navigator?\");\n  }\n\n  var entry = state.history.find(function (it) {\n    return it.type === 'drawer';\n  });\n  return (_ref = (_entry$status = entry === null || entry === void 0 ? void 0 : entry.status) !== null && _entry$status !== void 0 ? _entry$status : state.default) !== null && _ref !== void 0 ? _ref : 'closed';\n}","map":{"version":3,"mappings":"AAMA,eAAe,SAASA,wBAAT,CACbC,KADa,EAEC;EAAA;;EACd,IAAIA,KAAK,CAACC,OAAND,IAAiB,IAArB,EAA2B;IACzB,MAAM,IAAIE,KAAJ,CACJ,sGADI,CAAN;EAGD;;EAED,IAAMC,KAAK,GAAGH,KAAK,CAACC,OAAND,CAAcI,IAAdJ,CAAoBK,YAAD;IAAA,OAAQA,EAAE,CAACC,IAAHD,KAAY,QAApB;EAAA,CAAnBL,CAAd;EAIA,gCAAOG,KAAP,SAAOA,SAAP,WAAOA,GAAP,MAAOA,QAAK,CAAEI,MAAd,yDAAwBP,KAAK,CAACQ,OAA9B,uCAAyC,QAAzC;AACD","names":["getDrawerStatusFromState","state","history","Error","entry","find","it","type","status","default"],"sources":["getDrawerStatusFromState.tsx"],"sourcesContent":["import type {\n  DrawerNavigationState,\n  DrawerStatus,\n  ParamListBase,\n} from '@react-navigation/native';\n\nexport default function getDrawerStatusFromState(\n  state: DrawerNavigationState<ParamListBase>\n): DrawerStatus {\n  if (state.history == null) {\n    throw new Error(\n      \"Couldn't find the drawer status in the state object. Is it a valid state object of drawer navigator?\"\n    );\n  }\n\n  const entry = state.history.find((it) => it.type === 'drawer') as\n    | { type: 'drawer'; status: DrawerStatus }\n    | undefined;\n\n  return entry?.status ?? state.default ?? 'closed';\n}\n"]},"metadata":{},"sourceType":"module"}