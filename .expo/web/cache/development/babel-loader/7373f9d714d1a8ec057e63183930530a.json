{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"contentContainerStyle\", \"style\", \"children\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport DrawerPositionContext from \"../utils/DrawerPositionContext\";\nfunction DrawerContentScrollView(_ref, ref) {\n  var contentContainerStyle = _ref.contentContainerStyle,\n    style = _ref.style,\n    children = _ref.children,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var drawerPosition = React.useContext(DrawerPositionContext);\n  var insets = useSafeAreaInsets();\n  var isRight = I18nManager.getConstants().isRTL ? drawerPosition === 'left' : drawerPosition === 'right';\n  return React.createElement(ScrollView, _extends({}, rest, {\n    ref: ref,\n    contentContainerStyle: [{\n      paddingTop: insets.top + 4,\n      paddingStart: !isRight ? insets.left : 0,\n      paddingEnd: isRight ? insets.right : 0\n    }, contentContainerStyle],\n    style: [styles.container, style]\n  }), children);\n}\nexport default React.forwardRef(DrawerContentScrollView);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAAA;AAAA;AAAA;AAOA,SAASC,iBAAT,QAAkC,gCAAlC;AAEA,OAAOC,qBAAP;AAMA,SAASC,uBAAT,OAEEC,GAFF,EAGE;EAAA,IAFEC,qBAAF,GAEAC,KAFED,qBAAF;IAAyBE,KAAzB,GAEAD,KAFyBC,KAAzB;IAAgCC,QAAhC,GAEAF,KAFgCE,QAAhC;IAA6CC,gCAE7CH;EACA,IAAMI,cAAc,GAAGV,KAAK,CAACW,UAAN,CAAiBT,qBAAjB,CAAvB;EACA,IAAMU,MAAM,GAAGX,iBAAiB,EAAhC;EAEA,IAAMY,OAAO,GAAGC,WAAW,CAACC,YAAZ,GAA2BC,KAA3B,GACZN,cAAc,KAAK,MADP,GAEZA,cAAc,KAAK,OAFvB;EAIA,OACEV,oBAACiB,UAAD,eACMR,IADN;IAEEL,GAAG,EAAEA,GAFP;IAGEC,qBAAqB,EAAE,CACrB;MACEa,UAAU,EAAEN,MAAM,CAACO,GAAP,GAAa,CAD3B;MAEEC,YAAY,EAAE,CAACP,OAAD,GAAWD,MAAM,CAACS,IAAlB,GAAyB,CAFzC;MAGEC,UAAU,EAAET,OAAO,GAAGD,MAAM,CAACW,KAAV,GAAkB;IAHvC,CADqB,EAMrBlB,qBANqB,CAHzB;IAWEE,KAAK,EAAE,CAACiB,MAAM,CAACC,SAAR,EAAmBlB,KAAnB;EAXT,IAaGC,QAbH,CADF;AAiBD;AAED,eAAeR,KAAK,CAAC0B,UAAN,CAAiBvB,uBAAjB,CAAf;AAEA,IAAMqB,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;EAC/BH,SAAS,EAAE;IACTI,IAAI,EAAE;EADG;AADoB,CAAlB,CAAf","names":["React","useSafeAreaInsets","DrawerPositionContext","DrawerContentScrollView","ref","contentContainerStyle","_ref","style","children","rest","drawerPosition","useContext","insets","isRight","I18nManager","getConstants","isRTL","ScrollView","paddingTop","top","paddingStart","left","paddingEnd","right","styles","container","forwardRef","StyleSheet","create","flex"],"sources":["DrawerContentScrollView.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  I18nManager,\n  ScrollView,\n  ScrollViewProps,\n  StyleSheet,\n} from 'react-native';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport DrawerPositionContext from '../utils/DrawerPositionContext';\n\ntype Props = ScrollViewProps & {\n  children: React.ReactNode;\n};\n\nfunction DrawerContentScrollView(\n  { contentContainerStyle, style, children, ...rest }: Props,\n  ref?: React.Ref<ScrollView>\n) {\n  const drawerPosition = React.useContext(DrawerPositionContext);\n  const insets = useSafeAreaInsets();\n\n  const isRight = I18nManager.getConstants().isRTL\n    ? drawerPosition === 'left'\n    : drawerPosition === 'right';\n\n  return (\n    <ScrollView\n      {...rest}\n      ref={ref}\n      contentContainerStyle={[\n        {\n          paddingTop: insets.top + 4,\n          paddingStart: !isRight ? insets.left : 0,\n          paddingEnd: isRight ? insets.right : 0,\n        },\n        contentContainerStyle,\n      ]}\n      style={[styles.container, style]}\n    >\n      {children}\n    </ScrollView>\n  );\n}\n\nexport default React.forwardRef(DrawerContentScrollView);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}