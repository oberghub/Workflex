{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MAIN_SCRIPT = exports.soundMode = exports.playMode = exports.PLAYER_FUNCTIONS = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _constants = require(\"./constants\");\nvar _playMode, _soundMode;\nvar PLAYER_FUNCTIONS = {\n  muteVideo: 'player.mute(); true;',\n  unMuteVideo: 'player.unMute(); true;',\n  playVideo: 'player.playVideo(); true;',\n  pauseVideo: 'player.pauseVideo(); true;',\n  getVideoUrlScript: \"\\nwindow.ReactNativeWebView.postMessage(JSON.stringify({eventType: 'getVideoUrl', data: player.getVideoUrl()}));\\ntrue;\\n  \",\n  durationScript: \"\\nwindow.ReactNativeWebView.postMessage(JSON.stringify({eventType: 'getDuration', data: player.getDuration()}));\\ntrue;\\n\",\n  currentTimeScript: \"\\nwindow.ReactNativeWebView.postMessage(JSON.stringify({eventType: 'getCurrentTime', data: player.getCurrentTime()}));\\ntrue;\\n\",\n  isMutedScript: \"\\nwindow.ReactNativeWebView.postMessage(JSON.stringify({eventType: 'isMuted', data: player.isMuted()}));\\ntrue;\\n\",\n  getVolumeScript: \"\\nwindow.ReactNativeWebView.postMessage(JSON.stringify({eventType: 'getVolume', data: player.getVolume()}));\\ntrue;\\n\",\n  getPlaybackRateScript: \"\\nwindow.ReactNativeWebView.postMessage(JSON.stringify({eventType: 'getPlaybackRate', data: player.getPlaybackRate()}));\\ntrue;\\n\",\n  getAvailablePlaybackRatesScript: \"\\nwindow.ReactNativeWebView.postMessage(JSON.stringify({eventType: 'getAvailablePlaybackRates', data: player.getAvailablePlaybackRates()}));\\ntrue;\\n\",\n  setVolume: function setVolume(volume) {\n    return \"player.setVolume(\" + volume + \"); true;\";\n  },\n  seekToScript: function seekToScript(seconds, allowSeekAhead) {\n    return \"player.seekTo(\" + seconds + \", \" + allowSeekAhead + \"); true;\";\n  },\n  setPlaybackRate: function setPlaybackRate(playbackRate) {\n    return \"player.setPlaybackRate(\" + playbackRate + \"); true;\";\n  },\n  loadPlaylist: function loadPlaylist(playList, startIndex, play) {\n    var index = startIndex || 0;\n    var func = play ? 'loadPlaylist' : 'cuePlaylist';\n    var list = typeof playList === 'string' ? \"\\\"\" + playList + \"\\\"\" : 'undefined';\n    var listType = typeof playList === 'string' ? \"\\\"\" + playlist + \"\\\"\" : 'undefined';\n    var playlist = Array.isArray(playList) ? \"\\\"\" + playList.join(',') + \"\\\"\" : 'undefined';\n    return \"player.\" + func + \"({listType: \" + listType + \", list: \" + list + \", playlist: \" + playlist + \", index: \" + index + \"}); true;\";\n  },\n  loadVideoById: function loadVideoById(videoId, play) {\n    var func = play ? 'loadVideoById' : 'cueVideoById';\n    return \"player.\" + func + \"({videoId: \" + JSON.stringify(videoId) + \"}); true;\";\n  }\n};\nexports.PLAYER_FUNCTIONS = PLAYER_FUNCTIONS;\nvar playMode = (_playMode = {}, (0, _defineProperty2.default)(_playMode, _constants.PLAY_MODE, PLAYER_FUNCTIONS.playVideo), (0, _defineProperty2.default)(_playMode, _constants.PAUSE_MODE, PLAYER_FUNCTIONS.pauseVideo), _playMode);\nexports.playMode = playMode;\nvar soundMode = (_soundMode = {}, (0, _defineProperty2.default)(_soundMode, _constants.MUTE_MODE, PLAYER_FUNCTIONS.muteVideo), (0, _defineProperty2.default)(_soundMode, _constants.UNMUTE_MODE, PLAYER_FUNCTIONS.unMuteVideo), _soundMode);\nexports.soundMode = soundMode;\nvar MAIN_SCRIPT = function MAIN_SCRIPT(videoId, playList, initialPlayerParams, allowWebViewZoom, contentScale) {\n  var end = initialPlayerParams.end,\n    rel = initialPlayerParams.rel,\n    color = initialPlayerParams.color,\n    start = initialPlayerParams.start,\n    playerLang = initialPlayerParams.playerLang,\n    _initialPlayerParams$ = initialPlayerParams.loop,\n    loop = _initialPlayerParams$ === void 0 ? false : _initialPlayerParams$,\n    cc_lang_pref = initialPlayerParams.cc_lang_pref,\n    iv_load_policy = initialPlayerParams.iv_load_policy,\n    modestbranding = initialPlayerParams.modestbranding,\n    _initialPlayerParams$2 = initialPlayerParams.controls,\n    controls = _initialPlayerParams$2 === void 0 ? true : _initialPlayerParams$2,\n    showClosedCaptions = initialPlayerParams.showClosedCaptions,\n    _initialPlayerParams$3 = initialPlayerParams.preventFullScreen,\n    preventFullScreen = _initialPlayerParams$3 === void 0 ? false : _initialPlayerParams$3;\n  var rel_s = rel ? 1 : 0;\n  var loop_s = loop ? 1 : 0;\n  var videoId_s = videoId || '';\n  var controls_s = controls ? 1 : 0;\n  var cc_lang_pref_s = cc_lang_pref || '';\n  var modestbranding_s = modestbranding ? 1 : 0;\n  var preventFullScreen_s = preventFullScreen ? 0 : 1;\n  var showClosedCaptions_s = showClosedCaptions ? 1 : 0;\n  var contentScale_s = typeof contentScale === 'number' ? contentScale : 1.0;\n  var list = typeof playList === 'string' ? playList : undefined;\n  var listType = typeof playList === 'string' ? 'playlist' : undefined;\n  var playlist = Array.isArray(playList) ? playList.join(',') : undefined;\n  var scale = \"initial-scale=\" + contentScale_s;\n  if (!allowWebViewZoom) {\n    scale += \", maximum-scale=\" + contentScale_s;\n  }\n  var safeData = {\n    end: end,\n    list: list,\n    start: start,\n    color: color,\n    rel_s: rel_s,\n    loop_s: loop_s,\n    listType: listType,\n    playlist: playlist,\n    videoId_s: videoId_s,\n    controls_s: controls_s,\n    playerLang: playerLang,\n    iv_load_policy: iv_load_policy,\n    contentScale_s: contentScale_s,\n    cc_lang_pref_s: cc_lang_pref_s,\n    allowWebViewZoom: allowWebViewZoom,\n    modestbranding_s: modestbranding_s,\n    preventFullScreen_s: preventFullScreen_s,\n    showClosedCaptions_s: showClosedCaptions_s\n  };\n  var urlEncodedJSON = encodeURI(JSON.stringify(safeData));\n  var listParam = list ? \"list: '\" + list + \"',\" : '';\n  var listTypeParam = listType ? \"listType: '\" + list + \"',\" : '';\n  var playlistParam = playList ? \"playlist: '\" + playList + \"',\" : '';\n  var htmlString = \"\\n<!DOCTYPE html>\\n<html>\\n  <head>\\n    <meta\\n      name=\\\"viewport\\\"\\n      content=\\\"width=device-width, \" + scale + \"\\\"\\n    >\\n    <style>\\n      body {\\n        margin: 0;\\n      }\\n      .container {\\n        position: relative;\\n        width: 100%;\\n        height: 0;\\n        padding-bottom: 56.25%;\\n      }\\n      .video {\\n          position: absolute;\\n          top: 0;\\n          left: 0;\\n          width: 100%;\\n          height: 100%;\\n      }\\n    </style>\\n  </head>\\n  <body>\\n    <div class=\\\"container\\\">\\n      <div class=\\\"video\\\" id=\\\"player\\\" />\\n    </div>\\n\\n    <script>\\n      var tag = document.createElement('script');\\n\\n      tag.src = \\\"https://www.youtube.com/iframe_api\\\";\\n      var firstScriptTag = document.getElementsByTagName('script')[0];\\n      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\\n\\n      var player;\\n      function onYouTubeIframeAPIReady() {\\n        player = new YT.Player('player', {\\n          width: '1000',\\n          height: '1000',\\n          videoId: '\" + videoId_s + \"',\\n          playerVars: {\\n            \" + listParam + \"\\n            \" + listTypeParam + \"\\n            \" + playlistParam + \"\\n\\n            end: \" + end + \",\\n            rel: \" + rel_s + \",\\n            playsinline: 1,\\n            loop: \" + loop_s + \",\\n            color: \" + color + \",\\n            start: \" + start + \",\\n            hl: \" + playerLang + \",\\n            controls: \" + controls_s + \",\\n            fs: \" + preventFullScreen_s + \",\\n            cc_lang_pref: '\" + cc_lang_pref_s + \"',\\n            iv_load_policy: \" + iv_load_policy + \",\\n            modestbranding: \" + modestbranding_s + \",\\n            cc_load_policy: \" + showClosedCaptions_s + \",\\n          },\\n          events: {\\n            'onReady': onPlayerReady,\\n            'onStateChange': onPlayerStateChange,\\n            'onError': onPlayerError,\\n            'onPlaybackQualityChange': onPlaybackQualityChange,\\n            'onPlaybackRateChange': onPlaybackRateChange,\\n          }\\n        });\\n      }\\n\\n      function onPlayerError(event) {\\n        window.ReactNativeWebView.postMessage(JSON.stringify({eventType: 'playerError', data: event.data}))\\n      }\\n\\n      function onPlaybackRateChange(event) {\\n        window.ReactNativeWebView.postMessage(JSON.stringify({eventType: 'playbackRateChange', data: event.data}))\\n      }\\n\\n      function onPlaybackQualityChange(event) {\\n        window.ReactNativeWebView.postMessage(JSON.stringify({eventType: 'playerQualityChange', data: event.data}))\\n      }\\n\\n      function onPlayerReady(event) {\\n        window.ReactNativeWebView.postMessage(JSON.stringify({eventType: 'playerReady'}))\\n      }\\n\\n      var done = false;\\n      function onPlayerStateChange(event) {\\n        window.ReactNativeWebView.postMessage(JSON.stringify({eventType: 'playerStateChange', data: event.data}))\\n      }\\n\\n      var isFullScreen = false;\\n      function onFullScreenChange() {\\n        isFullScreen = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement || document.msFullscreenElement;\\n        window.ReactNativeWebView.postMessage(JSON.stringify({eventType: 'fullScreenChange', data: Boolean(isFullScreen)}));\\n      }\\n\\n      document.addEventListener('fullscreenchange', onFullScreenChange)\\n      document.addEventListener('mozfullscreenchange', onFullScreenChange)\\n      document.addEventListener('msfullscreenchange', onFullScreenChange)\\n      document.addEventListener('webkitfullscreenchange', onFullScreenChange)\\n    </script>\\n  </body>\\n</html>\\n\";\n  return {\n    htmlString: htmlString,\n    urlEncodedJSON: urlEncodedJSON\n  };\n};\nexports.MAIN_SCRIPT = MAIN_SCRIPT;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","MAIN_SCRIPT","soundMode","playMode","PLAYER_FUNCTIONS","_defineProperty2","_constants","_playMode","_soundMode","muteVideo","unMuteVideo","playVideo","pauseVideo","getVideoUrlScript","durationScript","currentTimeScript","isMutedScript","getVolumeScript","getPlaybackRateScript","getAvailablePlaybackRatesScript","setVolume","volume","seekToScript","seconds","allowSeekAhead","setPlaybackRate","playbackRate","loadPlaylist","playList","startIndex","play","index","func","list","listType","playlist","Array","isArray","join","loadVideoById","videoId","JSON","stringify","default","PLAY_MODE","PAUSE_MODE","MUTE_MODE","UNMUTE_MODE","initialPlayerParams","allowWebViewZoom","contentScale","end","rel","color","start","playerLang","_initialPlayerParams$","loop","cc_lang_pref","iv_load_policy","modestbranding","_initialPlayerParams$2","controls","showClosedCaptions","_initialPlayerParams$3","preventFullScreen","rel_s","loop_s","videoId_s","controls_s","cc_lang_pref_s","modestbranding_s","preventFullScreen_s","showClosedCaptions_s","contentScale_s","undefined","scale","safeData","urlEncodedJSON","encodeURI","listParam","listTypeParam","playlistParam","htmlString"],"sources":["C:/Users/LENOVO/OneDrive/เอกสาร/GitHub/mdp-proj-2022/node_modules/react-native-youtube-iframe/dist/PlayerScripts.js"],"sourcesContent":["var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.MAIN_SCRIPT=exports.soundMode=exports.playMode=exports.PLAYER_FUNCTIONS=void 0;var _defineProperty2=_interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));var _constants=require(\"./constants\");var _playMode,_soundMode;var PLAYER_FUNCTIONS={muteVideo:'player.mute(); true;',unMuteVideo:'player.unMute(); true;',playVideo:'player.playVideo(); true;',pauseVideo:'player.pauseVideo(); true;',getVideoUrlScript:\"\\nwindow.ReactNativeWebView.postMessage(JSON.stringify({eventType: 'getVideoUrl', data: player.getVideoUrl()}));\\ntrue;\\n  \",durationScript:\"\\nwindow.ReactNativeWebView.postMessage(JSON.stringify({eventType: 'getDuration', data: player.getDuration()}));\\ntrue;\\n\",currentTimeScript:\"\\nwindow.ReactNativeWebView.postMessage(JSON.stringify({eventType: 'getCurrentTime', data: player.getCurrentTime()}));\\ntrue;\\n\",isMutedScript:\"\\nwindow.ReactNativeWebView.postMessage(JSON.stringify({eventType: 'isMuted', data: player.isMuted()}));\\ntrue;\\n\",getVolumeScript:\"\\nwindow.ReactNativeWebView.postMessage(JSON.stringify({eventType: 'getVolume', data: player.getVolume()}));\\ntrue;\\n\",getPlaybackRateScript:\"\\nwindow.ReactNativeWebView.postMessage(JSON.stringify({eventType: 'getPlaybackRate', data: player.getPlaybackRate()}));\\ntrue;\\n\",getAvailablePlaybackRatesScript:\"\\nwindow.ReactNativeWebView.postMessage(JSON.stringify({eventType: 'getAvailablePlaybackRates', data: player.getAvailablePlaybackRates()}));\\ntrue;\\n\",setVolume:function setVolume(volume){return\"player.setVolume(\"+volume+\"); true;\";},seekToScript:function seekToScript(seconds,allowSeekAhead){return\"player.seekTo(\"+seconds+\", \"+allowSeekAhead+\"); true;\";},setPlaybackRate:function setPlaybackRate(playbackRate){return\"player.setPlaybackRate(\"+playbackRate+\"); true;\";},loadPlaylist:function loadPlaylist(playList,startIndex,play){var index=startIndex||0;var func=play?'loadPlaylist':'cuePlaylist';var list=typeof playList==='string'?\"\\\"\"+playList+\"\\\"\":'undefined';var listType=typeof playList==='string'?\"\\\"\"+playlist+\"\\\"\":'undefined';var playlist=Array.isArray(playList)?\"\\\"\"+playList.join(',')+\"\\\"\":'undefined';return\"player.\"+func+\"({listType: \"+listType+\", list: \"+list+\", playlist: \"+playlist+\", index: \"+index+\"}); true;\";},loadVideoById:function loadVideoById(videoId,play){var func=play?'loadVideoById':'cueVideoById';return\"player.\"+func+\"({videoId: \"+JSON.stringify(videoId)+\"}); true;\";}};exports.PLAYER_FUNCTIONS=PLAYER_FUNCTIONS;var playMode=(_playMode={},(0,_defineProperty2.default)(_playMode,_constants.PLAY_MODE,PLAYER_FUNCTIONS.playVideo),(0,_defineProperty2.default)(_playMode,_constants.PAUSE_MODE,PLAYER_FUNCTIONS.pauseVideo),_playMode);exports.playMode=playMode;var soundMode=(_soundMode={},(0,_defineProperty2.default)(_soundMode,_constants.MUTE_MODE,PLAYER_FUNCTIONS.muteVideo),(0,_defineProperty2.default)(_soundMode,_constants.UNMUTE_MODE,PLAYER_FUNCTIONS.unMuteVideo),_soundMode);exports.soundMode=soundMode;var MAIN_SCRIPT=function MAIN_SCRIPT(videoId,playList,initialPlayerParams,allowWebViewZoom,contentScale){var end=initialPlayerParams.end,rel=initialPlayerParams.rel,color=initialPlayerParams.color,start=initialPlayerParams.start,playerLang=initialPlayerParams.playerLang,_initialPlayerParams$=initialPlayerParams.loop,loop=_initialPlayerParams$===void 0?false:_initialPlayerParams$,cc_lang_pref=initialPlayerParams.cc_lang_pref,iv_load_policy=initialPlayerParams.iv_load_policy,modestbranding=initialPlayerParams.modestbranding,_initialPlayerParams$2=initialPlayerParams.controls,controls=_initialPlayerParams$2===void 0?true:_initialPlayerParams$2,showClosedCaptions=initialPlayerParams.showClosedCaptions,_initialPlayerParams$3=initialPlayerParams.preventFullScreen,preventFullScreen=_initialPlayerParams$3===void 0?false:_initialPlayerParams$3;var rel_s=rel?1:0;var loop_s=loop?1:0;var videoId_s=videoId||'';var controls_s=controls?1:0;var cc_lang_pref_s=cc_lang_pref||'';var modestbranding_s=modestbranding?1:0;var preventFullScreen_s=preventFullScreen?0:1;var showClosedCaptions_s=showClosedCaptions?1:0;var contentScale_s=typeof contentScale==='number'?contentScale:1.0;var list=typeof playList==='string'?playList:undefined;var listType=typeof playList==='string'?'playlist':undefined;var playlist=Array.isArray(playList)?playList.join(','):undefined;var scale=\"initial-scale=\"+contentScale_s;if(!allowWebViewZoom){scale+=\", maximum-scale=\"+contentScale_s;}var safeData={end:end,list:list,start:start,color:color,rel_s:rel_s,loop_s:loop_s,listType:listType,playlist:playlist,videoId_s:videoId_s,controls_s:controls_s,playerLang:playerLang,iv_load_policy:iv_load_policy,contentScale_s:contentScale_s,cc_lang_pref_s:cc_lang_pref_s,allowWebViewZoom:allowWebViewZoom,modestbranding_s:modestbranding_s,preventFullScreen_s:preventFullScreen_s,showClosedCaptions_s:showClosedCaptions_s};var urlEncodedJSON=encodeURI(JSON.stringify(safeData));var listParam=list?\"list: '\"+list+\"',\":'';var listTypeParam=listType?\"listType: '\"+list+\"',\":'';var playlistParam=playList?\"playlist: '\"+playList+\"',\":'';var htmlString=\"\\n<!DOCTYPE html>\\n<html>\\n  <head>\\n    <meta\\n      name=\\\"viewport\\\"\\n      content=\\\"width=device-width, \"+scale+\"\\\"\\n    >\\n    <style>\\n      body {\\n        margin: 0;\\n      }\\n      .container {\\n        position: relative;\\n        width: 100%;\\n        height: 0;\\n        padding-bottom: 56.25%;\\n      }\\n      .video {\\n          position: absolute;\\n          top: 0;\\n          left: 0;\\n          width: 100%;\\n          height: 100%;\\n      }\\n    </style>\\n  </head>\\n  <body>\\n    <div class=\\\"container\\\">\\n      <div class=\\\"video\\\" id=\\\"player\\\" />\\n    </div>\\n\\n    <script>\\n      var tag = document.createElement('script');\\n\\n      tag.src = \\\"https://www.youtube.com/iframe_api\\\";\\n      var firstScriptTag = document.getElementsByTagName('script')[0];\\n      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\\n\\n      var player;\\n      function onYouTubeIframeAPIReady() {\\n        player = new YT.Player('player', {\\n          width: '1000',\\n          height: '1000',\\n          videoId: '\"+videoId_s+\"',\\n          playerVars: {\\n            \"+listParam+\"\\n            \"+listTypeParam+\"\\n            \"+playlistParam+\"\\n\\n            end: \"+end+\",\\n            rel: \"+rel_s+\",\\n            playsinline: 1,\\n            loop: \"+loop_s+\",\\n            color: \"+color+\",\\n            start: \"+start+\",\\n            hl: \"+playerLang+\",\\n            controls: \"+controls_s+\",\\n            fs: \"+preventFullScreen_s+\",\\n            cc_lang_pref: '\"+cc_lang_pref_s+\"',\\n            iv_load_policy: \"+iv_load_policy+\",\\n            modestbranding: \"+modestbranding_s+\",\\n            cc_load_policy: \"+showClosedCaptions_s+\",\\n          },\\n          events: {\\n            'onReady': onPlayerReady,\\n            'onStateChange': onPlayerStateChange,\\n            'onError': onPlayerError,\\n            'onPlaybackQualityChange': onPlaybackQualityChange,\\n            'onPlaybackRateChange': onPlaybackRateChange,\\n          }\\n        });\\n      }\\n\\n      function onPlayerError(event) {\\n        window.ReactNativeWebView.postMessage(JSON.stringify({eventType: 'playerError', data: event.data}))\\n      }\\n\\n      function onPlaybackRateChange(event) {\\n        window.ReactNativeWebView.postMessage(JSON.stringify({eventType: 'playbackRateChange', data: event.data}))\\n      }\\n\\n      function onPlaybackQualityChange(event) {\\n        window.ReactNativeWebView.postMessage(JSON.stringify({eventType: 'playerQualityChange', data: event.data}))\\n      }\\n\\n      function onPlayerReady(event) {\\n        window.ReactNativeWebView.postMessage(JSON.stringify({eventType: 'playerReady'}))\\n      }\\n\\n      var done = false;\\n      function onPlayerStateChange(event) {\\n        window.ReactNativeWebView.postMessage(JSON.stringify({eventType: 'playerStateChange', data: event.data}))\\n      }\\n\\n      var isFullScreen = false;\\n      function onFullScreenChange() {\\n        isFullScreen = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement || document.msFullscreenElement;\\n        window.ReactNativeWebView.postMessage(JSON.stringify({eventType: 'fullScreenChange', data: Boolean(isFullScreen)}));\\n      }\\n\\n      document.addEventListener('fullscreenchange', onFullScreenChange)\\n      document.addEventListener('mozfullscreenchange', onFullScreenChange)\\n      document.addEventListener('msfullscreenchange', onFullScreenChange)\\n      document.addEventListener('webkitfullscreenchange', onFullScreenChange)\\n    </script>\\n  </body>\\n</html>\\n\";return{htmlString:htmlString,urlEncodedJSON:urlEncodedJSON};};exports.MAIN_SCRIPT=MAIN_SCRIPT;"],"mappings":"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"},"metadata":{},"sourceType":"script"}