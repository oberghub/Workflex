{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"progress\", \"onPress\", \"style\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated, { useAnimatedProps, useAnimatedStyle } from 'react-native-reanimated';\nvar PROGRESS_EPSILON = 0.05;\nvar Overlay = React.forwardRef(function Overlay(_ref, ref) {\n  var progress = _ref.progress,\n      onPress = _ref.onPress,\n      style = _ref.style,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var animatedStyle = useAnimatedStyle(function () {\n    var _f = function _f() {\n      return {\n        opacity: progress.value,\n        zIndex: progress.value > PROGRESS_EPSILON ? 0 : -1\n      };\n    };\n\n    _f._closure = {\n      progress: progress,\n      PROGRESS_EPSILON: PROGRESS_EPSILON\n    };\n    _f.asString = \"function _f(){const{progress,PROGRESS_EPSILON}=jsThis._closure;{return{opacity:progress.value,zIndex:progress.value>PROGRESS_EPSILON?0:-1};}}\";\n    _f.__workletHash = 1802421920871;\n    _f.__location = \"C:\\\\mdp-proj-2022\\\\node_modules\\\\@react-navigation\\\\drawer\\\\lib\\\\module\\\\views\\\\modern\\\\Overlay.js (14:41)\";\n    _f.__optimalization = 3;\n    return _f;\n  }());\n  var animatedProps = useAnimatedProps(function () {\n    var _f = function _f() {\n      var active = progress.value > PROGRESS_EPSILON;\n      return {\n        pointerEvents: active ? 'auto' : 'none',\n        accessibilityElementsHidden: !active,\n        importantForAccessibility: active ? 'auto' : 'no-hide-descendants'\n      };\n    };\n\n    _f._closure = {\n      progress: progress,\n      PROGRESS_EPSILON: PROGRESS_EPSILON\n    };\n    _f.asString = \"function _f(){const{progress,PROGRESS_EPSILON}=jsThis._closure;{const active=progress.value>PROGRESS_EPSILON;return{pointerEvents:active?'auto':'none',accessibilityElementsHidden:!active,importantForAccessibility:active?'auto':'no-hide-descendants'};}}\";\n    _f.__workletHash = 1603427272892;\n    _f.__location = \"C:\\\\mdp-proj-2022\\\\node_modules\\\\@react-navigation\\\\drawer\\\\lib\\\\module\\\\views\\\\modern\\\\Overlay.js (22:41)\";\n    return _f;\n  }());\n  return React.createElement(Animated.View, _extends({}, props, {\n    ref: ref,\n    style: [styles.overlay, overlayStyle, animatedStyle, style],\n    animatedProps: animatedProps\n  }), React.createElement(Pressable, {\n    onPress: onPress,\n    style: styles.pressable\n  }));\n});\nvar overlayStyle = Platform.select({\n  web: {\n    WebkitTapHighlightColor: 'transparent'\n  },\n  default: {}\n});\nvar styles = StyleSheet.create({\n  overlay: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)'\n  }),\n  pressable: {\n    flex: 1\n  }\n});\nexport default Overlay;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;AAEA,OAAOC,QAAP,IACEC,gBADF,EAEEC,gBAFF,QAGO,yBAHP;AAKA,IAAMC,gBAAgB,GAAG,IAAzB;AAOA,IAAMC,OAAO,GAAGL,KAAK,CAACM,UAANN,CAAiB,SAASK,OAAT,OAE/BE,GAF+B,EAG/B;EAAA,IAFEC,QAEF,QAFEA,QAEF;EAAA,IAFYC,OAEZ,QAFYA,OAEZ;EAAA,IAFqBC,KAErB,QAFqBA,KAErB;EAAA,IAF+BC,KAE/B;;EACA,IAAMC,aAAa,GAAGT,gBAAgB;IAAA,uBAAO;MAC3C,OAAO;QACLU,OAAO,EAAEL,QAAQ,CAACM,KADb;QAILC,MAAM,EAAEP,QAAQ,CAACM,KAATN,GAAiBJ,gBAAjBI,GAAoC,CAApCA,GAAwC,CAAC;MAJ5C,CAAP;IADoC;;IAAA;MAAA,UAJlCH,QAIkC;MAAA,kBAJxBL;IAIwB;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA,IAAtC;EASA,IAAMgB,aAAa,GAAGd,gBAAgB;IAAA,uBAAO;MAC3C,IAAMe,MAAM,GAAGT,QAAQ,CAACM,KAATN,GAAiBJ,gBAAhC;MAEA,OAAO;QACLc,aAAa,EAAED,MAAM,GAAG,MAAH,GAAY,MAD5B;QAELE,2BAA2B,EAAE,CAACF,MAFzB;QAGLG,yBAAyB,EAAEH,MAAM,GAAG,MAAH,GAAY;MAHxC,CAAP;IAHoC;;IAAA;MAAA,UA3BxCT,QA2BwC;MAAA,kBA3BxCJ;IA2BwC;IAAA;IAAA;IAAA;IAAA;EAAA,IAAtC;EAUA,OACEJ,oBAACC,QAAD,CAAUoB,IAAV,eACMV,KADN;IAEEJ,GAAG,EAAEA,GAFP;IAGEG,KAAK,EAAE,CAACY,MAAM,CAACC,OAAR,EAAiBC,YAAjB,EAA+BZ,aAA/B,EAA8CF,KAA9C,CAHT;IAIEM,aAAa,EAAEA;EAJjB,IAMEhB,oBAACyB,SAAD;IAAWhB,OAAO,EAAEA,OAApB;IAA6BC,KAAK,EAAEY,MAAM,CAACI;EAA3C,EANF,CADF;AAvBc,EAAhB;AAmCA,IAAMF,YAAY,GAAGG,QAAQ,CAACC,MAATD,CAAwC;EAC3DE,GAAG,EAAE;IAGHC,uBAAuB,EAAE;EAHtB,CADsD;EAM3DC,OAAO,EAAE;AANkD,CAAxCJ,CAArB;AASA,IAAML,MAAM,GAAGU,UAAU,CAACC,MAAXD,CAAkB;EAC/BT,OAAO,kCACFS,UAAU,CAACE,kBADT;IAELC,eAAe,EAAE;EAFZ,EADwB;EAK/BT,SAAS,EAAE;IACTU,IAAI,EAAE;EADG;AALoB,CAAlBJ,CAAf;AAUA,eAAe3B,OAAf","names":["React","Animated","useAnimatedProps","useAnimatedStyle","PROGRESS_EPSILON","Overlay","forwardRef","ref","progress","onPress","style","props","animatedStyle","opacity","value","zIndex","animatedProps","active","pointerEvents","accessibilityElementsHidden","importantForAccessibility","View","styles","overlay","overlayStyle","Pressable","pressable","Platform","select","web","WebkitTapHighlightColor","default","StyleSheet","create","absoluteFillObject","backgroundColor","flex"],"sources":["Overlay.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Platform, Pressable, StyleSheet } from 'react-native';\nimport Animated, {\n  useAnimatedProps,\n  useAnimatedStyle,\n} from 'react-native-reanimated';\n\nconst PROGRESS_EPSILON = 0.05;\n\ntype Props = React.ComponentProps<typeof Animated.View> & {\n  progress: Animated.SharedValue<number>;\n  onPress: () => void;\n};\n\nconst Overlay = React.forwardRef(function Overlay(\n  { progress, onPress, style, ...props }: Props,\n  ref: React.Ref<Animated.View>\n) {\n  const animatedStyle = useAnimatedStyle(() => {\n    return {\n      opacity: progress.value,\n      // We don't want the user to be able to press through the overlay when drawer is open\n      // We can send the overlay behind the screen to avoid it\n      zIndex: progress.value > PROGRESS_EPSILON ? 0 : -1,\n    };\n  });\n\n  const animatedProps = useAnimatedProps(() => {\n    const active = progress.value > PROGRESS_EPSILON;\n\n    return {\n      pointerEvents: active ? 'auto' : 'none',\n      accessibilityElementsHidden: !active,\n      importantForAccessibility: active ? 'auto' : 'no-hide-descendants',\n    } as const;\n  });\n\n  return (\n    <Animated.View\n      {...props}\n      ref={ref}\n      style={[styles.overlay, overlayStyle, animatedStyle, style]}\n      animatedProps={animatedProps}\n    >\n      <Pressable onPress={onPress} style={styles.pressable} />\n    </Animated.View>\n  );\n});\n\nconst overlayStyle = Platform.select<Record<string, string>>({\n  web: {\n    // Disable touch highlight on mobile Safari.\n    // WebkitTapHighlightColor must be used outside of StyleSheet.create because react-native-web will omit the property.\n    WebkitTapHighlightColor: 'transparent',\n  },\n  default: {},\n});\n\nconst styles = StyleSheet.create({\n  overlay: {\n    ...StyleSheet.absoluteFillObject,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  pressable: {\n    flex: 1,\n  },\n});\n\nexport default Overlay;\n"]},"metadata":{},"sourceType":"module"}