{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function HealthCalculatorScreen(_ref) {\n  var _this = this;\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    height = _useState2[0],\n    setHeight = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    weight = _useState4[0],\n    setWeight = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    Bmi = _useState6[0],\n    setBmi = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    BmiResult = _useState8[0],\n    setBmiResult = _useState8[1];\n  var calculate = function calculate(height, weight) {\n    var result = parseFloat(weight) * 10000 / (parseFloat(height) * parseFloat(height));\n    result = result.toFixed(2);\n    setBmi(result);\n    if (result < 18.5) {\n      setBmiResult('Underweight');\n    } else if (result >= 18.5 && result < 25) {\n      setBmiResult('Normal weight');\n    } else if (result >= 25 && result < 30) {\n      setBmiResult('Overweight');\n    } else if (result >= 30) {\n      setBmiResult('Obese');\n    } else {\n      alert('Incorrect Input!');\n      _this.setState({\n        BmiResult: ''\n      });\n    }\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: {\n        width: '100%',\n        padding: 10\n      },\n      children: [_jsx(Text, {\n        children: \"Height(cm.)\"\n      }), _jsx(TextInput, {\n        style: styles.heightAndWeight,\n        onChangeText: setHeight,\n        value: height\n      }), _jsx(Text, {\n        children: \"Weight(cm.)\"\n      }), _jsx(TextInput, {\n        style: styles.heightAndWeight,\n        onChangeText: setWeight,\n        value: weight\n      }), _jsx(TouchableOpacity, {\n        style: styles.submitButton,\n        onPress: function onPress() {\n          return calculate(height, weight);\n        },\n        children: _jsx(Text, {\n          style: styles.submitButtonText,\n          children: \" Calculate \"\n        })\n      }), _jsx(Text, {\n        style: styles.output,\n        children: Bmi\n      }), _jsx(Text, {\n        style: styles.resultText,\n        children: BmiResult\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: \"center\",\n    padding: 30,\n    width: '100%'\n  },\n  heightAndWeight: {\n    height: 40,\n    width: \"100%\",\n    borderWidth: 0.5,\n    borderColor: \"lightgray\",\n    borderRadius: 3,\n    padding: 10,\n    marginTop: 10\n  },\n  submitButton: {\n    backgroundColor: '#ff6666',\n    padding: 10,\n    margin: 15,\n    height: 40\n  },\n  submitButtonText: {\n    textAlign: \"center\",\n    color: 'white',\n    fontWeight: \"bold\",\n    fontSize: 18\n  },\n  output: {\n    textAlign: \"center\",\n    fontSize: 30\n  },\n  resultText: {\n    paddingTop: 20,\n    paddingBottom: 10,\n    textAlign: \"center\",\n    fontSize: 30,\n    color: 'blue'\n  }\n});","map":{"version":3,"names":["StatusBar","useState","HealthCalculatorScreen","route","navigation","height","setHeight","weight","setWeight","Bmi","setBmi","BmiResult","setBmiResult","calculate","result","parseFloat","toFixed","alert","setState","styles","container","width","padding","heightAndWeight","submitButton","submitButtonText","output","resultText","StyleSheet","create","flex","backgroundColor","alignItems","borderWidth","borderColor","borderRadius","marginTop","margin","textAlign","color","fontWeight","fontSize","paddingTop","paddingBottom"],"sources":["C:/Users/LENOVO/OneDrive/เอกสาร/GitHub/mdp-proj-2022/screens/Calculate/HealthCalcutarorScreen.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport { StyleSheet, Text, View, TextInput, TouchableOpacity } from 'react-native';\r\nimport { useState } from 'react';\r\n\r\nexport default function HealthCalculatorScreen({ route, navigation }) {\r\n  const [height, setHeight] = useState(\"\")\r\n  const [weight, setWeight] = useState(\"\")\r\n  const [Bmi, setBmi] = useState(\"\")\r\n  const [BmiResult, setBmiResult] = useState(\"\")\r\n\r\n  const calculate = (height, weight) => {\r\n    var result = (parseFloat(weight) * 10000) / (parseFloat(height) * parseFloat(height));\r\n    result = result.toFixed(2);\r\n    setBmi(result);\r\n    if (result < 18.5) {\r\n      setBmiResult('Underweight')\r\n    }\r\n    else if (result >= 18.5 && result < 25) {\r\n      setBmiResult('Normal weight')\r\n    }\r\n    else if (result >= 25 && result < 30) {\r\n      setBmiResult('Overweight')\r\n    }\r\n    else if (result >= 30) {\r\n      setBmiResult('Obese')\r\n    }\r\n    else {\r\n      alert('Incorrect Input!');\r\n      this.setState({ BmiResult: '' })\r\n    }\r\n  }\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={{\r\n        width: '100%',\r\n        padding: 10,\r\n      }}>\r\n        <Text>Height(cm.)</Text>\r\n        <TextInput\r\n          style={styles.heightAndWeight}\r\n          onChangeText={setHeight}\r\n          value={height}\r\n        />\r\n        <Text>Weight(cm.)</Text>\r\n        <TextInput\r\n          style={styles.heightAndWeight}\r\n          onChangeText={setWeight}\r\n          value={weight}\r\n        />\r\n        <TouchableOpacity\r\n          style={styles.submitButton}\r\n          onPress={\r\n            () => calculate(height, weight)\r\n          }>\r\n          <Text style={styles.submitButtonText}> Calculate </Text>\r\n        </TouchableOpacity>\r\n        <Text style={styles.output}>{Bmi}</Text>\r\n        <Text style={styles.resultText}>{BmiResult}</Text>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: \"center\",\r\n    padding: 30,\r\n    width: '100%'\r\n  },\r\n  heightAndWeight: {\r\n    height: 40,\r\n    width: \"100%\",\r\n    borderWidth: 0.5,\r\n    borderColor: \"lightgray\",\r\n    borderRadius: 3,\r\n    padding: 10,\r\n    marginTop: 10\r\n  },\r\n  submitButton: {\r\n    backgroundColor: '#ff6666',\r\n    padding: 10,\r\n    margin: 15,\r\n    height: 40,\r\n  },\r\n  submitButtonText: {\r\n    textAlign: \"center\",\r\n    color: 'white',\r\n    fontWeight: \"bold\",\r\n    fontSize: 18,\r\n  },\r\n  output: {\r\n    textAlign: \"center\",\r\n    fontSize: 30,\r\n  }, resultText: {\r\n    paddingTop: 20,\r\n    paddingBottom: 10,\r\n    textAlign: \"center\",\r\n    fontSize: 30,\r\n    color: 'blue'\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}