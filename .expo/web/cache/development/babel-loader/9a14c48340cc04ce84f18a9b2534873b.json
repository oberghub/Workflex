{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport CountDown from 'react-native-countdown-component';\nimport clock from \"./countdown\";\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { FlatList } from 'react-native-gesture-handler';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function PlayACourse(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var postureData = route.params.postureData;\n  var Stack = createNativeStackNavigator();\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    count = _useState2[0],\n    setCount = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    min = _useState4[0],\n    setMin = _useState4[1];\n  var _useState5 = useState(postureData[count].sec),\n    _useState6 = _slicedToArray(_useState5, 2),\n    sec = _useState6[0],\n    setSec = _useState6[1];\n  var _useState7 = useState(true),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isActive = _useState8[0],\n    setIsActive = _useState8[1];\n  var _useState9 = useState(\"Stop\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    status = _useState10[0],\n    setStatus = _useState10[1];\n  useEffect(function () {\n    var mySec = null;\n    if (isActive) {\n      mySec = setTimeout(function () {\n        setSec(function (sec) {\n          return sec - 1;\n        });\n      }, 1000);\n      if (sec == 0) {\n        clearInterval(mySec);\n      }\n    } else if (!isActive) {\n      clearInterval(mySec);\n    }\n    if (isActive == \"reset\") {\n      setMin(0);\n      setSec(postureData[count].sec);\n      clearInterval(mySec);\n    }\n  });\n  var setActive = function setActive() {\n    if (isActive) {\n      setIsActive(false);\n      setStatus(\"Resume\");\n    } else if (!isActive) {\n      setIsActive(true);\n      setStatus(\"Stop\");\n    } else {\n      setIsActive(true);\n    }\n    console.log(isActive);\n  };\n  var toReset = function toReset() {\n    setIsActive(\"reset\");\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: {\n        fontSize: 40,\n        fontWeight: '700'\n      },\n      children: postureData[count].name\n    }), _jsxs(Text, {\n      style: {\n        fontSize: 80,\n        fontWeight: '500'\n      },\n      children: [min < 10 ? '0' : '', sec > 59 ? setMin(min + 1) : min, \" : \", sec < 10 ? '0' : '', sec > 59 ? setSec(0) : sec]\n    }), _jsx(TouchableOpacity, {\n      style: {\n        height: 50,\n        width: '70%',\n        backgroundColor: 'lightblue',\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderRadius: 5,\n        marginTop: 20\n      },\n      onPress: setActive,\n      children: _jsx(Text, {\n        style: {\n          fontSize: 22,\n          fontWeight: '500'\n        },\n        children: status\n      })\n    }), _jsx(TouchableOpacity, {\n      style: {\n        height: 50,\n        width: '70%',\n        backgroundColor: 'lightblue',\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderRadius: 5,\n        marginTop: 20\n      },\n      children: _jsx(Text, {\n        style: {\n          fontSize: 22,\n          fontWeight: '500'\n        },\n        onPress: toReset,\n        children: \"Reset\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","CountDown","clock","createNativeStackNavigator","FlatList","PlayACourse","route","navigation","postureData","params","Stack","count","setCount","min","setMin","sec","setSec","isActive","setIsActive","status","setStatus","mySec","setTimeout","clearInterval","setActive","console","log","toReset","styles","container","fontSize","fontWeight","name","height","width","backgroundColor","alignItems","justifyContent","borderRadius","marginTop","StyleSheet","create","flex"],"sources":["C:/Users/LENOVO/OneDrive/เอกสาร/GitHub/mdp-proj-2022/screens/MyCourses/PlayACourseScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { TouchableOpacity } from 'react-native';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport CountDown from 'react-native-countdown-component';\r\nimport clock from \"./countdown\"\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { FlatList } from 'react-native-gesture-handler';\r\n\r\nexport default function PlayACourse({ route, navigation }) {\r\n  const { postureData } = route.params\r\n  // const timeConvert = (time) => {\r\n  //   const min = Math.floor(time / 60)\r\n  //   const sec = time % 60\r\n  // }\r\n  const Stack = createNativeStackNavigator();\r\n\r\n  const [count, setCount] = useState(0);\r\n  const [min, setMin] = useState(0);\r\n  const [sec, setSec] = useState(postureData[count].sec);\r\n  const [isActive, setIsActive] = useState(true);\r\n  const [status, setStatus] = useState(\"Stop\");\r\n\r\n  useEffect(() => {\r\n    let mySec = null\r\n    if (isActive) {\r\n      mySec = setTimeout(() => {\r\n        setSec((sec) => sec - 1)\r\n      }, 1000)\r\n      if(sec == 0){\r\n        clearInterval(mySec)\r\n      }\r\n    }\r\n    else if (!isActive) {\r\n      clearInterval(mySec)\r\n    }\r\n    if (isActive == \"reset\") {\r\n      setMin(0)\r\n      setSec(postureData[count].sec)\r\n      clearInterval(mySec)\r\n    }\r\n  })\r\n  const setActive = () => {\r\n    if (isActive) {\r\n      setIsActive(false)\r\n      setStatus(\"Resume\")\r\n    } \r\n    else if(!isActive){\r\n      setIsActive(true)\r\n      setStatus(\"Stop\")\r\n    }\r\n    else{\r\n      setIsActive(true)\r\n    }\r\n    console.log(isActive)\r\n  }\r\n  const toReset = () => {\r\n    setIsActive(\"reset\")\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={{ fontSize: 40, fontWeight: '700' }}>{postureData[count].name}</Text>\r\n      <Text style={{ fontSize: 80, fontWeight: '500' }}>{min < 10 ? '0' : ''}{sec > 59 ? setMin(min + 1) : min} : {sec < 10 ? '0' : ''}{sec > 59 ? setSec(0) : sec}</Text>\r\n      {/* <Stack.Navigator initialRouteName=\"My Courses\" screenOptions={{\r\n        headerShown: false\r\n      }}>\r\n        <Stack.Screen name=\"My Courses\" component={clock} />\r\n      </Stack.Navigator> */}\r\n      <TouchableOpacity style={{\r\n        height: 50,\r\n        width: '70%',\r\n        backgroundColor: 'lightblue',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderRadius: 5,\r\n        marginTop: 20,\r\n      }} onPress={setActive}>\r\n        <Text style={{\r\n          fontSize: 22,\r\n          fontWeight: '500'\r\n        }}>{status}</Text>\r\n      </TouchableOpacity>\r\n      <TouchableOpacity style={{\r\n        height: 50,\r\n        width: '70%',\r\n        backgroundColor: 'lightblue',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderRadius: 5,\r\n        marginTop: 20,\r\n      }}>\r\n        <Text style={{\r\n          fontSize: 22,\r\n          fontWeight: '500'\r\n        }} onPress={toReset}>Reset</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}